   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PROGRAM . LexToken(ID,'while_1',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PROGRAM ID . LexToken(FIM_LINHA,';',1,15)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA . LexToken(INT,'int',2,17)
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 6
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope . LexToken(INT,'int',2,17)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope INT . LexToken(ID,'x',2,21)
   yacc.py: 469:Action : Reduce rule [tipo_simples -> INT] with ['int'] and goto state 12
   yacc.py: 506:Result : <str @ 0x2a9656460b0> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples . LexToken(ID,'x',2,21)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples ID . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples variavel . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples fator . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples termo . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao_simples . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao . LexToken(SEPARADOR,',',2,22)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR . LexToken(ID,'y',2,24)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR ID . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR variavel . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR fator . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR termo . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao_simples . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao . LexToken(SEPARADOR,',',2,25)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR . LexToken(ID,'count',2,27)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR ID . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a965646670> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR variavel . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a965646670> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR fator . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a965646670> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR termo . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a965646670> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao_simples . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['count'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a965646670> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao empty . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['count',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a95fd0a380> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['count']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a95fd0a380> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['count']] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a96003ccc0> (['y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y', 'count']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a96003ccc0> (['y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y', 'count']] and goto state 23
   yacc.py: 506:Result : <list @ 0x2a96003cd40> (['x', 'y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 430:Defaulted state 23: Reduce using 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [declaracao_de_variaveis -> tipo_simples lista_de_parametros] with ['int',<list @ 0x2a96003cd40>] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x2a95fdcba40> (('int', ['x', 'y', 'count']))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA . LexToken(BEGIN,'begin',4,35)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 11
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA empty . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> empty] with [None] and goto state 52
   yacc.py: 506:Result : <list @ 0x2a95fdcce80> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis] with [<tuple @ 0x2a95fdcba40>,';',[]] and goto state 9
   yacc.py: 506:Result : <list @ 0x2a95fd0a380> ([('int', ['x', 'y', 'count'])])
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,35)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 20
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 430:Defaulted state 20: Reduce using 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis empty . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_subrotinas -> empty] with [None] and goto state 18
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 430:Defaulted state 18: Reduce using 3
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [bloco -> new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas] with [None,<list @ 0x2a95fd0a380>,None] and goto state 5
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbd80> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco . LexToken(BEGIN,'begin',4,35)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN . LexToken(READ,'read',5,42)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin . LexToken(READ,'read',5,42)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ . LexToken(AP,'(',5,46)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP . LexToken(ID,'x',5,47)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP ID . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP variavel . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP fator . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP termo . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao_simples . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao . LexToken(SEPARADOR,',',5,48)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR . LexToken(ID,'y',5,50)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR ID . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR variavel . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR fator . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR termo . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao_simples . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao . LexToken(FP,')',5,51)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao empty . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a96003ccc0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a96003ccc0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao mais_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y']] and goto state 99
   yacc.py: 506:Result : <list @ 0x2a95fdcce80> (['x', 'y'])
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros . LexToken(FP,')',5,51)
   yacc.py: 445:Action : Shift and goto state 109
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 430:Defaulted state 109: Reduce using 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> READ AP lista_de_parametros FP] with ['read','(',['x', 'y'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',5,52)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(WHILE,'while',6,55)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE . LexToken(AP,'(',6,61)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP . LexToken(ID,'x',6,62)
   yacc.py: 473:Action : Reduce rule [set_expressao -> <empty>] with [] and goto state 102
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao . LexToken(ID,'x',6,62)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao ID . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao variavel . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao fator . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao termo . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples . LexToken(MENOR,'<',6,64)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples MENOR . LexToken(ID,'y',6,66)
   yacc.py: 469:Action : Reduce rule [relacao -> MENOR] with ['<'] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a95fc15e30> ('<')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao . LexToken(ID,'y',6,66)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao ID . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao variavel . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao fator . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao termo . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 86
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao expressao_simples . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['x','<','y'] and goto state 112
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 430:Defaulted state 112: Reduce using 36
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao . LexToken(FP,')',6,67)
   yacc.py: 473:Action : Reduce rule [verifica_WHILE -> <empty>] with [] and goto state 118
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE . LexToken(FP,')',6,67)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP . LexToken(DO,'do',6,69)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO . LexToken(BEGIN,'begin',7,73)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN . LexToken(WRITE,'write',8,81)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin . LexToken(WRITE,'write',8,81)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE . LexToken(AP,'(',8,86)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP . LexToken(ID,'x',8,87)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP ID . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP variavel . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP fator . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP termo . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao_simples . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao . LexToken(FP,')',8,88)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao empty . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao mais_parametros . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',None] and goto state 100
   yacc.py: 506:Result : <list @ 0x2a95fdd9c40> (['x'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros . LexToken(FP,')',8,88)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['x'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',8,89)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(ID,'x',9,93)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',9,95)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',9,95)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'x',9,98)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',9,100)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(NUM_INT,1,9,102)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA NUM_INT . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA numero . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a965646740> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(END,'end',10,106)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA empty . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a965646740>,';',None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbf80> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdcbf80>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb980> ((None, ({'lexema': 'x', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos . LexToken(END,'end',10,106)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos END . LexToken(ID,'x',12,113)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb980>,'end'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto . LexToken(ID,'x',12,113)
   yacc.py: 473:Action : Reduce rule [desvio_WHILE -> <empty>] with [] and goto state 133
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE . LexToken(ID,'x',12,113)
   yacc.py: 469:Action : Reduce rule [comando_repetitivo_1 -> WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE] with ['while','(',None,True,None,')','do',None,None] and goto state 44
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 . LexToken(ID,'x',12,113)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 ID . LexToken(OPIGUAL_ATRIB,':=',12,115)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel . LexToken(OPIGUAL_ATRIB,':=',12,115)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB . LexToken(NUM_INT,45,12,118)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [45] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [45] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [45] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [45] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [45] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',45] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a965646740> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA . LexToken(ID,'count',13,123)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',13,129)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a96000bef0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',13,129)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(NUM_INT,0,13,132)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [0] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['count',':=',0] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a9656467c0> ({'lexema': 'count', 'tipo': 'int', 'valo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA . LexToken(WHILE,'while',15,137)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE . LexToken(AP,'(',15,142)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP . LexToken(ID,'count',15,143)
   yacc.py: 473:Action : Reduce rule [set_expressao -> <empty>] with [] and goto state 102
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao . LexToken(ID,'count',15,143)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao ID . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a9656540b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao variavel . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a9656540b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao fator . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a9656540b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao termo . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a9656540b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 445:Action : Shift and goto state 63
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples MENOR_IGUAL . LexToken(NUM_INT,45,15,152)
   yacc.py: 469:Action : Reduce rule [relacao -> MENOR_IGUAL] with ['<='] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a965646fb0> ('<=')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao . LexToken(NUM_INT,45,15,152)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao NUM_INT . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [45] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao numero . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [45] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao fator . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [45] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao termo . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [45] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao expressao_simples . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['count','<=',45] and goto state 112
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 430:Defaulted state 112: Reduce using 36
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao . LexToken(FP,')',15,154)
   yacc.py: 473:Action : Reduce rule [verifica_WHILE -> <empty>] with [] and goto state 118
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE . LexToken(FP,')',15,154)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP . LexToken(DO,'do',15,156)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO . LexToken(BEGIN,'begin',16,161)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN . LexToken(WRITE,'write',17,169)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin . LexToken(WRITE,'write',17,169)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE . LexToken(AP,'(',17,174)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP . LexToken(ID,'count',17,175)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP ID . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a965654130> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP variavel . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a965654130> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP fator . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a965654130> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP termo . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a965654130> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao_simples . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['count'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a965654130> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao . LexToken(FP,')',17,180)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao empty . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao mais_parametros . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['count',None] and goto state 100
   yacc.py: 506:Result : <list @ 0x2a95fdd9c40> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros . LexToken(FP,')',17,180)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['count'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',17,181)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(ID,'count',18,185)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',18,191)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a965654230> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',18,191)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'count',18,194)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a965654070> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a965654070> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a965654070> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a965654070> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',18,200)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(NUM_INT,1,18,202)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA NUM_INT . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA numero . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['count','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['count',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a9656467c0> ({'lexema': 'count', 'tipo': 'int', 'valo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(END,'end',19,206)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA empty . LexToken(END,'end',19,206)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',19,206)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a9656467c0>,';',None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb980> (({'lexema': 'count', 'tipo': 'int', 'val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',19,206)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdcb980>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbf80> ((None, ({'lexema': 'count', 'tipo': 'int ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos . LexToken(END,'end',19,206)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos END . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcbf80>,'end'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto . LexToken(END,'end',20,210)
   yacc.py: 473:Action : Reduce rule [desvio_WHILE -> <empty>] with [] and goto state 133
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comando_repetitivo_1 -> WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE] with ['while','(',None,True,None,')','do',None,None] and goto state 44
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 . LexToken(END,'end',20,210)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 empty . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 76
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_repetitivo_1 comandos] with [None,None] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbf80> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a9656467c0>,';',(None, None)] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb980> (({'lexema': 'count', 'tipo': 'int', 'val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a965646740>,';',<tuple @ 0x2a95fdcb980>] and goto state 76
   yacc.py: 506:Result : <tuple @ 0x2a95fdcba00> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_repetitivo_1 comandos] with [None,<tuple @ 0x2a95fdcba00>] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbb80> ((None, ({'lexema': 'x', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdcbb80>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbc00> ((None, (None, ({'lexema': 'x', 'tipo': ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos . LexToken(END,'end',20,210)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos END . LexToken(PONTO_FINAL,'.',20,213)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcbc00>,'end'] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto . LexToken(PONTO_FINAL,'.',20,213)
   yacc.py: 445:Action : Shift and goto state 16
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 2
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL . None
   yacc.py: 473:Action : Reduce rule [fim_programa -> <empty>] with [] and goto state 38
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 430:Defaulted state 38: Reduce using 1
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa . None
   yacc.py: 469:Action : Reduce rule [programa -> PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa] with ['program','while_1',';',<tuple @ 0x2a95fdcbd80>,None,'.',None] and goto state 1
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbd80> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : programa . $end
   yacc.py: 571:Done   : Returning <tuple @ 0x2a95fdcbd80> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 572:PLY: PARSE DEBUG END
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PROGRAM . LexToken(ID,'while_1',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PROGRAM ID . LexToken(FIM_LINHA,';',1,15)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA . LexToken(INT,'int',2,17)
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 6
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope . LexToken(INT,'int',2,17)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope INT . LexToken(ID,'x',2,21)
   yacc.py: 469:Action : Reduce rule [tipo_simples -> INT] with ['int'] and goto state 12
   yacc.py: 506:Result : <str @ 0x2a9656576f0> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples . LexToken(ID,'x',2,21)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples ID . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples variavel . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples fator . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples termo . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao_simples . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao . LexToken(SEPARADOR,',',2,22)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR . LexToken(ID,'y',2,24)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR ID . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR variavel . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR fator . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR termo . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao_simples . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao . LexToken(SEPARADOR,',',2,25)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR . LexToken(ID,'count',2,27)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR ID . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a965657c30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR variavel . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a965657c30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR fator . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a965657c30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR termo . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a965657c30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao_simples . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['count'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a965657c30> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao empty . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['count',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a95fdd6f80> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['count']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a95fdd6f80> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['count']] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a95fdccb80> (['y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y', 'count']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a95fdccb80> (['y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y', 'count']] and goto state 23
   yacc.py: 506:Result : <list @ 0x2a96003cbc0> (['x', 'y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 430:Defaulted state 23: Reduce using 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [declaracao_de_variaveis -> tipo_simples lista_de_parametros] with ['int',<list @ 0x2a96003cbc0>] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb240> (('int', ['x', 'y', 'count']))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA . LexToken(BEGIN,'begin',4,35)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 11
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA empty . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> empty] with [None] and goto state 52
   yacc.py: 506:Result : <list @ 0x2a9656562c0> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis] with [<tuple @ 0x2a95fdcb240>,';',[]] and goto state 9
   yacc.py: 506:Result : <list @ 0x2a95fdd6f80> ([('int', ['x', 'y', 'count'])])
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,35)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 20
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 430:Defaulted state 20: Reduce using 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis empty . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_subrotinas -> empty] with [None] and goto state 18
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 430:Defaulted state 18: Reduce using 3
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [bloco -> new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas] with [None,<list @ 0x2a95fdd6f80>,None] and goto state 5
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb3c0> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco . LexToken(BEGIN,'begin',4,35)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN . LexToken(READ,'read',5,42)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin . LexToken(READ,'read',5,42)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ . LexToken(AP,'(',5,46)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP . LexToken(ID,'x',5,47)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP ID . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP variavel . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP fator . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP termo . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao_simples . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao . LexToken(SEPARADOR,',',5,48)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR . LexToken(ID,'y',5,50)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR ID . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR variavel . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR fator . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR termo . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao_simples . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao . LexToken(FP,')',5,51)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao empty . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a95fdccb80> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a95fdccb80> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao mais_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y']] and goto state 99
   yacc.py: 506:Result : <list @ 0x2a9656562c0> (['x', 'y'])
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros . LexToken(FP,')',5,51)
   yacc.py: 445:Action : Shift and goto state 109
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 430:Defaulted state 109: Reduce using 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> READ AP lista_de_parametros FP] with ['read','(',['x', 'y'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',5,52)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(WHILE,'while',6,55)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE . LexToken(AP,'(',6,61)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP . LexToken(ID,'x',6,62)
   yacc.py: 473:Action : Reduce rule [set_expressao -> <empty>] with [] and goto state 102
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao . LexToken(ID,'x',6,62)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao ID . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao variavel . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao fator . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao termo . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples . LexToken(MENOR,'<',6,64)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples MENOR . LexToken(ID,'y',6,66)
   yacc.py: 469:Action : Reduce rule [relacao -> MENOR] with ['<'] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a95fc15e30> ('<')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao . LexToken(ID,'y',6,66)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao ID . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao variavel . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao fator . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao termo . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 86
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao expressao_simples . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['x','<','y'] and goto state 112
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 430:Defaulted state 112: Reduce using 36
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao . LexToken(FP,')',6,67)
   yacc.py: 473:Action : Reduce rule [verifica_WHILE -> <empty>] with [] and goto state 118
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE . LexToken(FP,')',6,67)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP . LexToken(DO,'do',6,69)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO . LexToken(BEGIN,'begin',7,73)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN . LexToken(WRITE,'write',8,81)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin . LexToken(WRITE,'write',8,81)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE . LexToken(AP,'(',8,86)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP . LexToken(ID,'x',8,87)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP ID . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP variavel . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP fator . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP termo . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao_simples . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao . LexToken(FP,')',8,88)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao empty . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao mais_parametros . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',None] and goto state 100
   yacc.py: 506:Result : <list @ 0x2a96000e480> (['x'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros . LexToken(FP,')',8,88)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['x'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',8,89)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(ID,'x',9,93)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',9,95)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',9,95)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'x',9,98)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',9,100)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(NUM_INT,1,9,102)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA NUM_INT . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA numero . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a965657d00> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(END,'end',10,106)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA empty . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a965657d00>,';',None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdd9240> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdd9240>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb4c0> ((None, ({'lexema': 'x', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos . LexToken(END,'end',10,106)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos END . LexToken(ID,'x',12,113)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb4c0>,'end'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto . LexToken(ID,'x',12,113)
   yacc.py: 473:Action : Reduce rule [desvio_WHILE -> <empty>] with [] and goto state 133
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE . LexToken(ID,'x',12,113)
   yacc.py: 469:Action : Reduce rule [comando_repetitivo_1 -> WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE] with ['while','(',None,True,None,')','do',None,None] and goto state 44
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 . LexToken(ID,'x',12,113)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 ID . LexToken(OPIGUAL_ATRIB,':=',12,115)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel . LexToken(OPIGUAL_ATRIB,':=',12,115)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB . LexToken(NUM_INT,45,12,118)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [45] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [45] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [45] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [45] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [45] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',45] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a965657d00> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA . LexToken(ID,'count',13,123)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',13,129)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a965657fb0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',13,129)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(NUM_INT,0,13,132)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [0] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['count',':=',0] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a965657d80> ({'lexema': 'count', 'tipo': 'int', 'valo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA . LexToken(WHILE,'while',15,137)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE . LexToken(AP,'(',15,142)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP . LexToken(ID,'count',15,143)
   yacc.py: 473:Action : Reduce rule [set_expressao -> <empty>] with [] and goto state 102
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao . LexToken(ID,'count',15,143)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao ID . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a96565e6b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao variavel . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a96565e6b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao fator . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a96565e6b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao termo . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a96565e6b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 445:Action : Shift and goto state 63
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples MENOR_IGUAL . LexToken(NUM_INT,45,15,152)
   yacc.py: 469:Action : Reduce rule [relacao -> MENOR_IGUAL] with ['<='] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a965657fb0> ('<=')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao . LexToken(NUM_INT,45,15,152)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao NUM_INT . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [45] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao numero . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [45] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao fator . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [45] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao termo . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [45] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao expressao_simples . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['count','<=',45] and goto state 112
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 430:Defaulted state 112: Reduce using 36
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao . LexToken(FP,')',15,154)
   yacc.py: 473:Action : Reduce rule [verifica_WHILE -> <empty>] with [] and goto state 118
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE . LexToken(FP,')',15,154)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP . LexToken(DO,'do',15,156)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO . LexToken(BEGIN,'begin',16,161)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN . LexToken(WRITE,'write',17,169)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin . LexToken(WRITE,'write',17,169)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE . LexToken(AP,'(',17,174)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP . LexToken(ID,'count',17,175)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP ID . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a96565e6f0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP variavel . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a96565e6f0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP fator . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a96565e6f0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP termo . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a96565e6f0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao_simples . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['count'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a96565e6f0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao . LexToken(FP,')',17,180)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao empty . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao mais_parametros . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['count',None] and goto state 100
   yacc.py: 506:Result : <list @ 0x2a96000e480> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros . LexToken(FP,')',17,180)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['count'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',17,181)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(ID,'count',18,185)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',18,191)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a96565e7f0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',18,191)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'count',18,194)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a96565e670> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a96565e670> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a96565e670> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a96565e670> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',18,200)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(NUM_INT,1,18,202)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA NUM_INT . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA numero . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['count','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['count',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a965657d80> ({'lexema': 'count', 'tipo': 'int', 'valo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(END,'end',19,206)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA empty . LexToken(END,'end',19,206)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',19,206)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a965657d80>,';',None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb4c0> (({'lexema': 'count', 'tipo': 'int', 'val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',19,206)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdcb4c0>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdd9240> ((None, ({'lexema': 'count', 'tipo': 'int ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos . LexToken(END,'end',19,206)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos END . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdd9240>,'end'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto . LexToken(END,'end',20,210)
   yacc.py: 473:Action : Reduce rule [desvio_WHILE -> <empty>] with [] and goto state 133
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comando_repetitivo_1 -> WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE] with ['while','(',None,True,None,')','do',None,None] and goto state 44
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 . LexToken(END,'end',20,210)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 empty . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 76
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_repetitivo_1 comandos] with [None,None] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x2a95fdd9240> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a965657d80>,';',(None, None)] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb4c0> (({'lexema': 'count', 'tipo': 'int', 'val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a965657d00>,';',<tuple @ 0x2a95fdcb4c0>] and goto state 76
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb340> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_repetitivo_1 comandos] with [None,<tuple @ 0x2a95fdcb340>] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb180> ((None, ({'lexema': 'x', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdcb180>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdd9f80> ((None, (None, ({'lexema': 'x', 'tipo': ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos . LexToken(END,'end',20,210)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos END . LexToken(PONTO_FINAL,'.',20,213)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdd9f80>,'end'] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto . LexToken(PONTO_FINAL,'.',20,213)
   yacc.py: 445:Action : Shift and goto state 16
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 2
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL . None
   yacc.py: 473:Action : Reduce rule [fim_programa -> <empty>] with [] and goto state 38
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 430:Defaulted state 38: Reduce using 1
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa . None
   yacc.py: 469:Action : Reduce rule [programa -> PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa] with ['program','while_1',';',<tuple @ 0x2a95fdcb3c0>,None,'.',None] and goto state 1
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb3c0> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : programa . $end
   yacc.py: 571:Done   : Returning <tuple @ 0x2a95fdcb3c0> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 572:PLY: PARSE DEBUG END
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PROGRAM . LexToken(ID,'while_1',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PROGRAM ID . LexToken(FIM_LINHA,';',1,15)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA . LexToken(INT,'int',2,17)
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 6
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope . LexToken(INT,'int',2,17)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope INT . LexToken(ID,'x',2,21)
   yacc.py: 469:Action : Reduce rule [tipo_simples -> INT] with ['int'] and goto state 12
   yacc.py: 506:Result : <str @ 0x2a96565f870> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples . LexToken(ID,'x',2,21)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples ID . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples variavel . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples fator . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples termo . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao_simples . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao . LexToken(SEPARADOR,',',2,22)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR . LexToken(ID,'y',2,24)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR ID . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR variavel . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR fator . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR termo . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao_simples . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao empty . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a9656561c0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a9656561c0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao mais_parametros . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y']] and goto state 23
   yacc.py: 506:Result : <list @ 0x2a965656300> (['x', 'y'])
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 430:Defaulted state 23: Reduce using 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples lista_de_parametros . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 469:Action : Reduce rule [declaracao_de_variaveis -> tipo_simples lista_de_parametros] with ['int',['x', 'y']] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x2a96002da40> (('int', ['x', 'y']))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis . LexToken(FIM_LINHA,';',2,25)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA . LexToken(BEGIN,'begin',4,28)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 11
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA empty . LexToken(BEGIN,'begin',4,28)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> empty] with [None] and goto state 52
   yacc.py: 506:Result : <list @ 0x2a96565f4c0> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,28)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis] with [<tuple @ 0x2a96002da40>,';',[]] and goto state 9
   yacc.py: 506:Result : <list @ 0x2a96003ccc0> ([('int', ['x', 'y'])])
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,28)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 20
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 430:Defaulted state 20: Reduce using 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis empty . LexToken(BEGIN,'begin',4,28)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_subrotinas -> empty] with [None] and goto state 18
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 430:Defaulted state 18: Reduce using 3
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas . LexToken(BEGIN,'begin',4,28)
   yacc.py: 469:Action : Reduce rule [bloco -> new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas] with [None,<list @ 0x2a96003ccc0>,None] and goto state 5
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9f00> ((None, [('int', ['x', 'y'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco . LexToken(BEGIN,'begin',4,28)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN . LexToken(READ,'read',5,35)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin . LexToken(READ,'read',5,35)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ . LexToken(AP,'(',5,39)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP . LexToken(ID,'x',5,40)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP ID . LexToken(SEPARADOR,',',5,41)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP variavel . LexToken(SEPARADOR,',',5,41)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP fator . LexToken(SEPARADOR,',',5,41)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP termo . LexToken(SEPARADOR,',',5,41)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao_simples . LexToken(SEPARADOR,',',5,41)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao . LexToken(SEPARADOR,',',5,41)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR . LexToken(ID,'y',5,43)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR ID . LexToken(FP,')',5,44)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR variavel . LexToken(FP,')',5,44)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR fator . LexToken(FP,')',5,44)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR termo . LexToken(FP,')',5,44)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao_simples . LexToken(FP,')',5,44)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao . LexToken(FP,')',5,44)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao empty . LexToken(FP,')',5,44)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',5,44)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a9656561c0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',5,44)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a9656561c0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao mais_parametros . LexToken(FP,')',5,44)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y']] and goto state 99
   yacc.py: 506:Result : <list @ 0x2a96565f4c0> (['x', 'y'])
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros . LexToken(FP,')',5,44)
   yacc.py: 445:Action : Shift and goto state 109
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 430:Defaulted state 109: Reduce using 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> READ AP lista_de_parametros FP] with ['read','(',['x', 'y'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',5,45)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(WHILE,'while',6,48)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE . LexToken(AP,'(',6,54)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP . LexToken(ID,'x',6,55)
   yacc.py: 473:Action : Reduce rule [set_expressao -> <empty>] with [] and goto state 102
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao . LexToken(ID,'x',6,55)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao ID . LexToken(MENOR,'<',6,57)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao variavel . LexToken(MENOR,'<',6,57)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao fator . LexToken(MENOR,'<',6,57)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao termo . LexToken(MENOR,'<',6,57)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples . LexToken(MENOR,'<',6,57)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples MENOR . LexToken(ID,'y',6,59)
   yacc.py: 469:Action : Reduce rule [relacao -> MENOR] with ['<'] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a95fc15e30> ('<')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao . LexToken(ID,'y',6,59)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao ID . LexToken(FP,')',6,60)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao variavel . LexToken(FP,')',6,60)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao fator . LexToken(FP,')',6,60)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao termo . LexToken(FP,')',6,60)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 86
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao expressao_simples . LexToken(FP,')',6,60)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['x','<','y'] and goto state 112
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 430:Defaulted state 112: Reduce using 36
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao . LexToken(FP,')',6,60)
   yacc.py: 473:Action : Reduce rule [verifica_WHILE -> <empty>] with [] and goto state 118
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE . LexToken(FP,')',6,60)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP . LexToken(DO,'do',6,62)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO . LexToken(BEGIN,'begin',7,66)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN . LexToken(WRITE,'write',8,74)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin . LexToken(WRITE,'write',8,74)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE . LexToken(AP,'(',8,79)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP . LexToken(ID,'x',8,80)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP ID . LexToken(FP,')',8,81)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP variavel . LexToken(FP,')',8,81)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP fator . LexToken(FP,')',8,81)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP termo . LexToken(FP,')',8,81)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao_simples . LexToken(FP,')',8,81)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao . LexToken(FP,')',8,81)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao empty . LexToken(FP,')',8,81)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao mais_parametros . LexToken(FP,')',8,81)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',None] and goto state 100
   yacc.py: 506:Result : <list @ 0x2a95fdd9c40> (['x'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros . LexToken(FP,')',8,81)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['x'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',8,82)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(ID,'x',9,86)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',9,88)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',9,88)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'x',9,91)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',9,93)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',9,93)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',9,93)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',9,93)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',9,93)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(NUM_INT,1,9,95)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA NUM_INT . LexToken(FIM_LINHA,';',9,96)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA numero . LexToken(FIM_LINHA,';',9,96)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',9,96)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',9,96)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',9,96)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',9,96)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a96565fd80> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',9,96)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(END,'end',10,99)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA empty . LexToken(END,'end',10,99)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',10,99)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a96565fd80>,';',None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb080> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',10,99)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdcb080>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb040> ((None, ({'lexema': 'x', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos . LexToken(END,'end',10,99)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos END . LexToken(END,'end',11,103)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb040>,'end'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto . LexToken(END,'end',11,103)
   yacc.py: 473:Action : Reduce rule [desvio_WHILE -> <empty>] with [] and goto state 133
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE . LexToken(END,'end',11,103)
   yacc.py: 469:Action : Reduce rule [comando_repetitivo_1 -> WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE] with ['while','(',None,True,None,')','do',None,None] and goto state 44
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 . LexToken(END,'end',11,103)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 empty . LexToken(END,'end',11,103)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 76
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 comandos . LexToken(END,'end',11,103)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_repetitivo_1 comandos] with [None,None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb040> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',11,103)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',(None, None)] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb080> ((None, (None, None)))
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos . LexToken(END,'end',11,103)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos END . LexToken(PONTO_FINAL,'.',11,106)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb080>,'end'] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto . LexToken(PONTO_FINAL,'.',11,106)
   yacc.py: 445:Action : Shift and goto state 16
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 2
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL . None
   yacc.py: 473:Action : Reduce rule [fim_programa -> <empty>] with [] and goto state 38
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 430:Defaulted state 38: Reduce using 1
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa . None
   yacc.py: 469:Action : Reduce rule [programa -> PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa] with ['program','while_1',';',<tuple @ 0x2a95fdc9f00>,None,'.',None] and goto state 1
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9f00> ((None, [('int', ['x', 'y'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : programa . $end
   yacc.py: 571:Done   : Returning <tuple @ 0x2a95fdc9f00> ((None, [('int', ['x', 'y'])]))
   yacc.py: 572:PLY: PARSE DEBUG END
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PROGRAM . LexToken(ID,'testebytecode',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PROGRAM ID . LexToken(FIM_LINHA,';',1,21)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA . LexToken(INT,'int',2,23)
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 6
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope . LexToken(INT,'int',2,23)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope INT . LexToken(ID,'x',2,27)
   yacc.py: 469:Action : Reduce rule [tipo_simples -> INT] with ['int'] and goto state 12
   yacc.py: 506:Result : <str @ 0x2a96565fe70> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples . LexToken(ID,'x',2,27)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples ID . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples variavel . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples fator . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples termo . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao_simples . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao . LexToken(SEPARADOR,',',2,28)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR . LexToken(ID,'y',2,30)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR ID . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR variavel . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR fator . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR termo . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao_simples . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao . LexToken(SEPARADOR,',',2,31)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR . LexToken(ID,'z',2,33)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR ID . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR variavel . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR fator . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR termo . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao_simples . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['z'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao empty . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['z',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a96565f480> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a96565f480> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['z']] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a96565f3c0> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y', 'z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a96565f3c0> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao mais_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y', 'z']] and goto state 23
   yacc.py: 506:Result : <list @ 0x2a95fdd9c40> (['x', 'y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 430:Defaulted state 23: Reduce using 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples lista_de_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [declaracao_de_variaveis -> tipo_simples lista_de_parametros] with ['int',['x', 'y', 'z']] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x2a96002d440> (('int', ['x', 'y', 'z']))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA . LexToken(BEGIN,'begin',3,36)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 11
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA empty . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> empty] with [None] and goto state 52
   yacc.py: 506:Result : <list @ 0x2a96566a080> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis] with [<tuple @ 0x2a96002d440>,';',[]] and goto state 9
   yacc.py: 506:Result : <list @ 0x2a96565f480> ([('int', ['x', 'y', 'z'])])
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',3,36)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 20
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 430:Defaulted state 20: Reduce using 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis empty . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_subrotinas -> empty] with [None] and goto state 18
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 430:Defaulted state 18: Reduce using 3
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [bloco -> new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas] with [None,<list @ 0x2a96565f480>,None] and goto state 5
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbfc0> ((None, [('int', ['x', 'y', 'z'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco . LexToken(BEGIN,'begin',3,36)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN . LexToken(ID,'x',4,43)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin . LexToken(ID,'x',4,43)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',4,45)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',4,45)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(NUM_INT,0,4,48)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [0] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',0] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a96565f800> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA . LexToken(READ,'read',5,53)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ . LexToken(AP,'(',5,57)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP . LexToken(ID,'y',5,58)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP ID . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP variavel . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP fator . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP termo . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao_simples . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao . LexToken(SEPARADOR,',',5,59)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR . LexToken(ID,'z',5,61)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR ID . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR variavel . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR fator . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR termo . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao_simples . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['z'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao . LexToken(FP,')',5,62)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao empty . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['z',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a96566a080> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a96566a080> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao mais_parametros . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['z']] and goto state 99
   yacc.py: 506:Result : <list @ 0x2a96565f3c0> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP lista_de_parametros . LexToken(FP,')',5,62)
   yacc.py: 445:Action : Shift and goto state 109
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 430:Defaulted state 109: Reduce using 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> READ AP lista_de_parametros FP] with ['read','(',['y', 'z'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento . LexToken(FIM_LINHA,';',5,63)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA . LexToken(ID,'x',6,66)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',6,68)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',6,68)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'x',6,71)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',6,72)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',6,72)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',6,72)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',6,72)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',6,72)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'z',6,73)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(OPMUL,'*',6,74)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(OPMUL,'*',6,74)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(OPMUL,'*',6,74)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 87
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(OPMUL,'*',6,74)
   yacc.py: 445:Action : Shift and goto state 65
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL . LexToken(AP,'(',6,75)
   yacc.py: 445:Action : Shift and goto state 33
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP . LexToken(NUM_INT,10,6,76)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP NUM_INT . LexToken(DIV,'div',6,79)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [10] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP numero . LexToken(DIV,'div',6,79)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [10] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP fator . LexToken(DIV,'div',6,79)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [10] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo . LexToken(DIV,'div',6,79)
   yacc.py: 445:Action : Shift and goto state 67
   yacc.py: 410:
   yacc.py: 411:State  : 67
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV . LexToken(ID,'y',6,83)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV ID . LexToken(OPSOMA,'+',6,85)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV variavel . LexToken(OPSOMA,'+',6,85)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 92
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV fator . LexToken(OPSOMA,'+',6,85)
   yacc.py: 469:Action : Reduce rule [termo -> termo DIV fator] with [10,'div','y'] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo . LexToken(OPSOMA,'+',6,85)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [10] and goto state 69
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples . LexToken(OPSOMA,'+',6,85)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA . LexToken(NUM_INT,1,6,87)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA NUM_INT . LexToken(FP,')',6,88)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA numero . LexToken(FP,')',6,88)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA fator . LexToken(FP,')',6,88)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA termo . LexToken(FP,')',6,88)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with [10,'+',1] and goto state 69
   yacc.py: 506:Result : <int @ 0x7ffd14c11850> (11)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples . LexToken(FP,')',6,88)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples FP . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 469:Action : Reduce rule [fator -> AP expressao_simples FP] with ['(',11,')'] and goto state 90
   yacc.py: 506:Result : <int @ 0x7ffd14c11850> (11)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL fator . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 469:Action : Reduce rule [termo -> termo OPMUL fator] with ['z','*',11] and goto state 87
   yacc.py: 506:Result : <int @ 0x2a9656328d0> (550)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+',550] and goto state 26
   yacc.py: 506:Result : <int @ 0x2a95fd07e10> (550)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [550] and goto state 97
   yacc.py: 506:Result : <int @ 0x2a95fd07e10> (550)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',550] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a96565f800> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(WRITE,'write',7,120)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE . LexToken(AP,'(',7,125)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP . LexToken(ID,'x',7,126)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP ID . LexToken(SEPARADOR,',',7,127)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP variavel . LexToken(SEPARADOR,',',7,127)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP fator . LexToken(SEPARADOR,',',7,127)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP termo . LexToken(SEPARADOR,',',7,127)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao_simples . LexToken(SEPARADOR,',',7,127)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao . LexToken(SEPARADOR,',',7,127)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR . LexToken(ID,'y',7,129)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR ID . LexToken(SEPARADOR,',',7,130)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR variavel . LexToken(SEPARADOR,',',7,130)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR fator . LexToken(SEPARADOR,',',7,130)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR termo . LexToken(SEPARADOR,',',7,130)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao_simples . LexToken(SEPARADOR,',',7,130)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao . LexToken(SEPARADOR,',',7,130)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR . LexToken(ID,'z',7,132)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR ID . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR variavel . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR fator . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR termo . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao_simples . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['z'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao . LexToken(FP,')',7,133)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao empty . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['z',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a96565f3c0> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR lista_de_parametros . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a96565f3c0> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['z']] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a96565f4c0> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y', 'z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a96565f4c0> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao mais_parametros . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y', 'z']] and goto state 100
   yacc.py: 506:Result : <list @ 0x2a96566a080> (['x', 'y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP lista_de_parametros . LexToken(FP,')',7,133)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['x', 'y', 'z'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento . LexToken(FIM_LINHA,';',7,134)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA . LexToken(IF,'if',8,137)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF . LexToken(AP,'(',8,139)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP . LexToken(ID,'x',8,140)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP ID . LexToken(MAIOR,'>',8,142)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP variavel . LexToken(MAIOR,'>',8,142)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP fator . LexToken(MAIOR,'>',8,142)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP termo . LexToken(MAIOR,'>',8,142)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples . LexToken(MAIOR,'>',8,142)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples MAIOR . LexToken(NUM_INT,0,8,144)
   yacc.py: 469:Action : Reduce rule [relacao -> MAIOR] with ['>'] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a95fc15db0> ('>')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao . LexToken(NUM_INT,0,8,144)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao NUM_INT . LexToken(FP,')',8,145)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao numero . LexToken(FP,')',8,145)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao fator . LexToken(FP,')',8,145)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao termo . LexToken(FP,')',8,145)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao expressao_simples . LexToken(FP,')',8,145)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['x','>',0] and goto state 101
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao . LexToken(FP,')',8,145)
   yacc.py: 445:Action : Shift and goto state 111
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP . LexToken(THEN,'then',8,147)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN . LexToken(BEGIN,'begin',9,153)
   yacc.py: 473:Action : Reduce rule [verifica_IF -> <empty>] with [] and goto state 122
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF . LexToken(BEGIN,'begin',9,153)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN . LexToken(IF,'if',10,161)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin . LexToken(IF,'if',10,161)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF . LexToken(AP,'(',10,163)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP . LexToken(ID,'y',10,164)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP ID . LexToken(MAIOR,'>',10,165)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP variavel . LexToken(MAIOR,'>',10,165)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP fator . LexToken(MAIOR,'>',10,165)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP termo . LexToken(MAIOR,'>',10,165)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples . LexToken(MAIOR,'>',10,165)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples MAIOR . LexToken(NUM_INT,0,10,166)
   yacc.py: 469:Action : Reduce rule [relacao -> MAIOR] with ['>'] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a95fc15db0> ('>')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao . LexToken(NUM_INT,0,10,166)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao NUM_INT . LexToken(FP,')',10,167)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao numero . LexToken(FP,')',10,167)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao fator . LexToken(FP,')',10,167)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao termo . LexToken(FP,')',10,167)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao expressao_simples . LexToken(FP,')',10,167)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['y','>',0] and goto state 101
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd770> (False)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao . LexToken(FP,')',10,167)
   yacc.py: 445:Action : Shift and goto state 111
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP . LexToken(THEN,'then',10,168)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN . LexToken(BEGIN,'begin',11,175)
   yacc.py: 473:Action : Reduce rule [verifica_IF -> <empty>] with [] and goto state 122
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF . LexToken(BEGIN,'begin',11,175)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN . LexToken(ID,'y',12,184)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin . LexToken(ID,'y',12,184)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',12,186)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',12,186)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'x',12,189)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',12,190)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',12,190)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',12,190)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',12,190)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',12,190)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'y',12,191)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 87
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+','y'] and goto state 26
   yacc.py: 506:Result : <int @ 0x2a9656328d0> (550)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [550] and goto state 97
   yacc.py: 506:Result : <int @ 0x2a9656328d0> (550)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',550] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a96565ff80> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',13,196)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',13,196)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',13,196)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a96565ff80>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb3c0> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos . LexToken(END,'end',13,196)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos END . LexToken(ELSE,'else',14,202)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb3c0>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto . LexToken(ELSE,'else',14,202)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto empty . LexToken(ELSE,'else',14,202)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto comandos . LexToken(ELSE,'else',14,202)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 127
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb3c0> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos . LexToken(ELSE,'else',14,202)
   yacc.py: 473:Action : Reduce rule [desvio_IF -> <empty>] with [] and goto state 130
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF . LexToken(ELSE,'else',14,202)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE . LexToken(BEGIN,'begin',15,209)
   yacc.py: 473:Action : Reduce rule [verifica_ELSE -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE . LexToken(BEGIN,'begin',15,209)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN . LexToken(ID,'y',16,218)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin . LexToken(ID,'y',16,218)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',16,220)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',16,220)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'y',16,223)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',16,224)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',16,224)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',16,224)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',16,224)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',16,224)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'x',16,225)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 87
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['y','+','x'] and goto state 26
   yacc.py: 506:Result : <int @ 0x2a9656329f0> (1100)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1100] and goto state 97
   yacc.py: 506:Result : <int @ 0x2a9656329f0> (1100)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',1100] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a96565ff80> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',17,230)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',17,230)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',17,230)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a96565ff80>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb240> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos . LexToken(END,'end',17,230)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos END . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb240>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto . LexToken(END,'end',19,236)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto empty . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto comandos . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 135
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb240> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos . LexToken(END,'end',19,236)
   yacc.py: 473:Action : Reduce rule [desvio_ELSE -> <empty>] with [] and goto state 136
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comando_condicional_1 -> IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE] with ['if','(',False,')','then',None,(None, None),None,'else',None,(None, None),None] and goto state 43
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb3c0> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comando_condicional_1 . LexToken(END,'end',19,236)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comando_condicional_1 empty . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 75
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comando_condicional_1 comandos . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_condicional_1 comandos] with [(None, None),None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb240> (((None, None), None))
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos . LexToken(END,'end',19,236)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos END . LexToken(ELSE,'else',20,241)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb240>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comando_composto . LexToken(ELSE,'else',20,241)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comando_composto empty . LexToken(ELSE,'else',20,241)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comando_composto comandos . LexToken(ELSE,'else',20,241)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 127
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb240> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos . LexToken(ELSE,'else',20,241)
   yacc.py: 473:Action : Reduce rule [desvio_IF -> <empty>] with [] and goto state 130
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF . LexToken(ELSE,'else',20,241)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE . LexToken(BEGIN,'begin',21,247)
   yacc.py: 473:Action : Reduce rule [verifica_ELSE -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE . LexToken(BEGIN,'begin',21,247)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN . LexToken(IF,'if',22,255)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin . LexToken(IF,'if',22,255)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF . LexToken(AP,'(',22,257)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP . LexToken(ID,'y',22,258)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP ID . LexToken(MAIOR,'>',22,259)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP variavel . LexToken(MAIOR,'>',22,259)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP fator . LexToken(MAIOR,'>',22,259)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP termo . LexToken(MAIOR,'>',22,259)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples . LexToken(MAIOR,'>',22,259)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples MAIOR . LexToken(NUM_INT,0,22,260)
   yacc.py: 469:Action : Reduce rule [relacao -> MAIOR] with ['>'] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a95fc15db0> ('>')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao . LexToken(NUM_INT,0,22,260)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao NUM_INT . LexToken(FP,')',22,261)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao numero . LexToken(FP,')',22,261)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao fator . LexToken(FP,')',22,261)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao termo . LexToken(FP,')',22,261)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao expressao_simples . LexToken(FP,')',22,261)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['y','>',0] and goto state 101
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao . LexToken(FP,')',22,261)
   yacc.py: 445:Action : Shift and goto state 111
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP . LexToken(THEN,'then',22,262)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN . LexToken(BEGIN,'begin',23,269)
   yacc.py: 473:Action : Reduce rule [verifica_IF -> <empty>] with [] and goto state 122
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF . LexToken(BEGIN,'begin',23,269)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN . LexToken(ID,'y',24,278)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin . LexToken(ID,'y',24,278)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',24,279)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',24,279)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'z',24,282)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',24,284)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',24,284)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',24,284)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',24,284)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',24,284)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'y',24,286)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 87
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['z','+','y'] and goto state 26
   yacc.py: 506:Result : <int @ 0x2a965632b50> (1150)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1150] and goto state 97
   yacc.py: 506:Result : <int @ 0x2a965632b50> (1150)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',1150] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a96565ff80> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',25,291)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',25,291)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',25,291)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a96565ff80>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb3c0> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos . LexToken(END,'end',25,291)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos END . LexToken(ELSE,'else',26,297)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb3c0>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto . LexToken(ELSE,'else',26,297)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto empty . LexToken(ELSE,'else',26,297)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto comandos . LexToken(ELSE,'else',26,297)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 127
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb3c0> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos . LexToken(ELSE,'else',26,297)
   yacc.py: 473:Action : Reduce rule [desvio_IF -> <empty>] with [] and goto state 130
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF . LexToken(ELSE,'else',26,297)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE . LexToken(BEGIN,'begin',27,304)
   yacc.py: 473:Action : Reduce rule [verifica_ELSE -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE . LexToken(BEGIN,'begin',27,304)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN . LexToken(ID,'y',28,313)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin . LexToken(ID,'y',28,313)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',28,314)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',28,314)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'y',28,317)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',28,319)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',28,319)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',28,319)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',28,319)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',28,319)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'z',28,321)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 87
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['y','+','z'] and goto state 26
   yacc.py: 506:Result : <int @ 0x2a965632990> (1200)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1200] and goto state 97
   yacc.py: 506:Result : <int @ 0x2a965632990> (1200)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',1200] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a96565ff80> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',29,326)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',29,326)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',29,326)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a96565ff80>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb0c0> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos . LexToken(END,'end',29,326)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos END . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb0c0>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto . LexToken(END,'end',30,331)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto empty . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto comandos . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 135
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb0c0> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos . LexToken(END,'end',30,331)
   yacc.py: 473:Action : Reduce rule [desvio_ELSE -> <empty>] with [] and goto state 136
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comando_condicional_1 -> IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE] with ['if','(',True,')','then',None,(None, None),None,'else',None,(None, None),None] and goto state 43
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb3c0> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comando_condicional_1 . LexToken(END,'end',30,331)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comando_condicional_1 empty . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 75
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comando_condicional_1 comandos . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_condicional_1 comandos] with [(None, None),None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb0c0> (((None, None), None))
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos . LexToken(END,'end',30,331)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos END . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb0c0>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto . LexToken(END,'end',34,344)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto empty . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 135
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb0c0> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos . LexToken(END,'end',34,344)
   yacc.py: 473:Action : Reduce rule [desvio_ELSE -> <empty>] with [] and goto state 136
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comando_condicional_1 -> IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE] with ['if','(',True,')','then',None,(None, None),None,'else',None,(None, None),None] and goto state 43
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb240> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comando_condicional_1 . LexToken(END,'end',34,344)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comando_condicional_1 empty . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 75
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comando_condicional_1 comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_condicional_1 comandos] with [(None, None),None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb0c0> (((None, None), None))
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdcb0c0>] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb3c0> ((None, ((None, None), None)))
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a96565f800>,';',<tuple @ 0x2a95fdcb3c0>] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdda580> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdda580>] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x2a95fdda700> ((None, ({'lexema': 'x', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a96565f800>,';',<tuple @ 0x2a95fdda700>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdda880> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos . LexToken(END,'end',34,344)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos END . LexToken(PONTO_FINAL,'.',34,347)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdda880>,'end'] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto . LexToken(PONTO_FINAL,'.',34,347)
   yacc.py: 445:Action : Shift and goto state 16
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 2
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL . None
   yacc.py: 473:Action : Reduce rule [fim_programa -> <empty>] with [] and goto state 38
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 430:Defaulted state 38: Reduce using 1
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa . None
   yacc.py: 469:Action : Reduce rule [programa -> PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa] with ['program','testebytecode',';',<tuple @ 0x2a95fdcbfc0>,None,'.',None] and goto state 1
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbfc0> ((None, [('int', ['x', 'y', 'z'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : programa . $end
   yacc.py: 571:Done   : Returning <tuple @ 0x2a95fdcbfc0> ((None, [('int', ['x', 'y', 'z'])]))
   yacc.py: 572:PLY: PARSE DEBUG END
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PROGRAM . LexToken(ID,'testebytecode',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PROGRAM ID . LexToken(FIM_LINHA,';',1,21)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA . LexToken(INT,'int',2,23)
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 6
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope . LexToken(INT,'int',2,23)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope INT . LexToken(ID,'x',2,27)
   yacc.py: 469:Action : Reduce rule [tipo_simples -> INT] with ['int'] and goto state 12
   yacc.py: 506:Result : <str @ 0x2a9656461f0> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples . LexToken(ID,'x',2,27)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples ID . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples variavel . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples fator . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples termo . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao_simples . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao . LexToken(SEPARADOR,',',2,28)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR . LexToken(ID,'y',2,30)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR ID . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR variavel . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR fator . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR termo . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao_simples . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao . LexToken(SEPARADOR,',',2,31)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR . LexToken(ID,'z',2,33)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR ID . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR variavel . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR fator . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR termo . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao_simples . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['z'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao empty . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['z',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a965646b80> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a965646b80> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['z']] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a965646b40> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y', 'z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a965646b40> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao mais_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y', 'z']] and goto state 23
   yacc.py: 506:Result : <list @ 0x2a965646dc0> (['x', 'y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 430:Defaulted state 23: Reduce using 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples lista_de_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [declaracao_de_variaveis -> tipo_simples lista_de_parametros] with ['int',['x', 'y', 'z']] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x2a96002d580> (('int', ['x', 'y', 'z']))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA . LexToken(BEGIN,'begin',3,36)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 11
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA empty . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> empty] with [None] and goto state 52
   yacc.py: 506:Result : <list @ 0x2a9656462c0> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis] with [<tuple @ 0x2a96002d580>,';',[]] and goto state 9
   yacc.py: 506:Result : <list @ 0x2a965646b80> ([('int', ['x', 'y', 'z'])])
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',3,36)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 20
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 430:Defaulted state 20: Reduce using 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis empty . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_subrotinas -> empty] with [None] and goto state 18
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 430:Defaulted state 18: Reduce using 3
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [bloco -> new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas] with [None,<list @ 0x2a965646b80>,None] and goto state 5
   yacc.py: 506:Result : <tuple @ 0x2a96002da80> ((None, [('int', ['x', 'y', 'z'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco . LexToken(BEGIN,'begin',3,36)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN . LexToken(ID,'x',4,43)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin . LexToken(ID,'x',4,43)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',4,45)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',4,45)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(NUM_INT,0,4,48)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [0] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',0] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a95fdce140> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA . LexToken(READ,'read',5,53)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ . LexToken(AP,'(',5,57)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP . LexToken(ID,'y',5,58)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP ID . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP variavel . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP fator . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP termo . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao_simples . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao . LexToken(SEPARADOR,',',5,59)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR . LexToken(ID,'z',5,61)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR ID . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR variavel . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR fator . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR termo . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao_simples . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['z'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao . LexToken(FP,')',5,62)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao empty . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['z',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a9656462c0> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a9656462c0> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao mais_parametros . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['z']] and goto state 99
   yacc.py: 506:Result : <list @ 0x2a965646b40> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP lista_de_parametros . LexToken(FP,')',5,62)
   yacc.py: 445:Action : Shift and goto state 109
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 430:Defaulted state 109: Reduce using 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> READ AP lista_de_parametros FP] with ['read','(',['y', 'z'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento . LexToken(FIM_LINHA,';',5,63)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA . LexToken(ID,'y',6,66)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',6,67)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',6,67)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(NUM_INT,1,6,70)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',6,71)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',6,71)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',6,71)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',6,71)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',6,71)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',6,71)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a965646040> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',6,71)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(ID,'x',7,74)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',7,76)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',7,76)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'x',7,79)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',7,80)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',7,80)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',7,80)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',7,80)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',7,80)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'z',7,81)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(OPMUL,'*',7,82)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(OPMUL,'*',7,82)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(OPMUL,'*',7,82)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 87
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(OPMUL,'*',7,82)
   yacc.py: 445:Action : Shift and goto state 65
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL . LexToken(AP,'(',7,83)
   yacc.py: 445:Action : Shift and goto state 33
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP . LexToken(NUM_INT,10,7,84)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP NUM_INT . LexToken(DIV,'div',7,87)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [10] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP numero . LexToken(DIV,'div',7,87)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [10] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP fator . LexToken(DIV,'div',7,87)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [10] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo . LexToken(DIV,'div',7,87)
   yacc.py: 445:Action : Shift and goto state 67
   yacc.py: 410:
   yacc.py: 411:State  : 67
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV . LexToken(ID,'y',7,91)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV ID . LexToken(OPSOMA,'+',7,93)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV variavel . LexToken(OPSOMA,'+',7,93)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 92
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV fator . LexToken(OPSOMA,'+',7,93)
   yacc.py: 469:Action : Reduce rule [termo -> termo DIV fator] with [10,'div','y'] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo . LexToken(OPSOMA,'+',7,93)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [10] and goto state 69
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples . LexToken(OPSOMA,'+',7,93)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA . LexToken(NUM_INT,1,7,95)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA NUM_INT . LexToken(FP,')',7,96)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA numero . LexToken(FP,')',7,96)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA fator . LexToken(FP,')',7,96)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA termo . LexToken(FP,')',7,96)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with [10,'+',1] and goto state 69
   yacc.py: 506:Result : <int @ 0x7ffd14c11850> (11)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples . LexToken(FP,')',7,96)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples FP . LexToken(FIM_LINHA,';',7,97)
   yacc.py: 469:Action : Reduce rule [fator -> AP expressao_simples FP] with ['(',11,')'] and goto state 90
   yacc.py: 506:Result : <int @ 0x7ffd14c11850> (11)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL fator . LexToken(FIM_LINHA,';',7,97)
   yacc.py: 469:Action : Reduce rule [termo -> termo OPMUL fator] with ['z','*',11] and goto state 87
   yacc.py: 506:Result : <int @ 0x2a9632a0210> (550)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',7,97)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+',550] and goto state 26
   yacc.py: 506:Result : <int @ 0x2a9632a0230> (550)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',7,97)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [550] and goto state 97
   yacc.py: 506:Result : <int @ 0x2a9632a0230> (550)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',7,97)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',550] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a95fdce140> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',7,97)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA . LexToken(WRITE,'write',8,128)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE . LexToken(AP,'(',8,133)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP . LexToken(ID,'x',8,134)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP ID . LexToken(SEPARADOR,',',8,135)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP variavel . LexToken(SEPARADOR,',',8,135)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP fator . LexToken(SEPARADOR,',',8,135)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP termo . LexToken(SEPARADOR,',',8,135)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao_simples . LexToken(SEPARADOR,',',8,135)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao . LexToken(SEPARADOR,',',8,135)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR . LexToken(ID,'y',8,137)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR ID . LexToken(SEPARADOR,',',8,138)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR variavel . LexToken(SEPARADOR,',',8,138)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR fator . LexToken(SEPARADOR,',',8,138)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR termo . LexToken(SEPARADOR,',',8,138)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao_simples . LexToken(SEPARADOR,',',8,138)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao . LexToken(SEPARADOR,',',8,138)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR . LexToken(ID,'z',8,140)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR ID . LexToken(FP,')',8,141)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR variavel . LexToken(FP,')',8,141)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR fator . LexToken(FP,')',8,141)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR termo . LexToken(FP,')',8,141)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao_simples . LexToken(FP,')',8,141)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['z'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao . LexToken(FP,')',8,141)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao empty . LexToken(FP,')',8,141)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',8,141)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['z',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a965646b40> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR lista_de_parametros . LexToken(FP,')',8,141)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a965646b40> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',8,141)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['z']] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a96565f3c0> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',8,141)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y', 'z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a96565f3c0> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao mais_parametros . LexToken(FP,')',8,141)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y', 'z']] and goto state 100
   yacc.py: 506:Result : <list @ 0x2a9656462c0> (['x', 'y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP lista_de_parametros . LexToken(FP,')',8,141)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['x', 'y', 'z'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento . LexToken(FIM_LINHA,';',8,142)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA . LexToken(IF,'if',9,145)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF . LexToken(AP,'(',9,147)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP . LexToken(ID,'x',9,148)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP ID . LexToken(MAIOR,'>',9,150)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP variavel . LexToken(MAIOR,'>',9,150)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP fator . LexToken(MAIOR,'>',9,150)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP termo . LexToken(MAIOR,'>',9,150)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples . LexToken(MAIOR,'>',9,150)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples MAIOR . LexToken(NUM_INT,0,9,152)
   yacc.py: 469:Action : Reduce rule [relacao -> MAIOR] with ['>'] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a95fc15db0> ('>')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao . LexToken(NUM_INT,0,9,152)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao NUM_INT . LexToken(FP,')',9,153)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao numero . LexToken(FP,')',9,153)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao fator . LexToken(FP,')',9,153)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao termo . LexToken(FP,')',9,153)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao expressao_simples . LexToken(FP,')',9,153)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['x','>',0] and goto state 101
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao . LexToken(FP,')',9,153)
   yacc.py: 445:Action : Shift and goto state 111
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP . LexToken(THEN,'then',9,155)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN . LexToken(BEGIN,'begin',10,161)
   yacc.py: 473:Action : Reduce rule [verifica_IF -> <empty>] with [] and goto state 122
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF . LexToken(BEGIN,'begin',10,161)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN . LexToken(IF,'if',11,169)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin . LexToken(IF,'if',11,169)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF . LexToken(AP,'(',11,171)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP . LexToken(ID,'y',11,172)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP ID . LexToken(MAIOR,'>',11,173)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP variavel . LexToken(MAIOR,'>',11,173)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP fator . LexToken(MAIOR,'>',11,173)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP termo . LexToken(MAIOR,'>',11,173)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples . LexToken(MAIOR,'>',11,173)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples MAIOR . LexToken(NUM_INT,0,11,174)
   yacc.py: 469:Action : Reduce rule [relacao -> MAIOR] with ['>'] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a95fc15db0> ('>')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao . LexToken(NUM_INT,0,11,174)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao NUM_INT . LexToken(FP,')',11,175)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao numero . LexToken(FP,')',11,175)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao fator . LexToken(FP,')',11,175)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao termo . LexToken(FP,')',11,175)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao expressao_simples . LexToken(FP,')',11,175)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['y','>',0] and goto state 101
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao . LexToken(FP,')',11,175)
   yacc.py: 445:Action : Shift and goto state 111
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP . LexToken(THEN,'then',11,176)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN . LexToken(BEGIN,'begin',12,183)
   yacc.py: 473:Action : Reduce rule [verifica_IF -> <empty>] with [] and goto state 122
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF . LexToken(BEGIN,'begin',12,183)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN . LexToken(ID,'y',13,192)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin . LexToken(ID,'y',13,192)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',13,194)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',13,194)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'x',13,197)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',13,198)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',13,198)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',13,198)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',13,198)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',13,198)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'y',13,199)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',13,200)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',13,200)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',13,200)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 87
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',13,200)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+','y'] and goto state 26
   yacc.py: 506:Result : <int @ 0x2a9632a01b0> (551)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',13,200)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [551] and goto state 97
   yacc.py: 506:Result : <int @ 0x2a9632a01b0> (551)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',13,200)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',551] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a965646040> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',13,200)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',14,204)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',14,204)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',14,204)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a965646040>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9e00> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos . LexToken(END,'end',14,204)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos END . LexToken(ELSE,'else',15,210)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdc9e00>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto . LexToken(ELSE,'else',15,210)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto empty . LexToken(ELSE,'else',15,210)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto comandos . LexToken(ELSE,'else',15,210)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 127
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9e00> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos . LexToken(ELSE,'else',15,210)
   yacc.py: 473:Action : Reduce rule [desvio_IF -> <empty>] with [] and goto state 130
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF . LexToken(ELSE,'else',15,210)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE . LexToken(BEGIN,'begin',16,217)
   yacc.py: 473:Action : Reduce rule [verifica_ELSE -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE . LexToken(BEGIN,'begin',16,217)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN . LexToken(ID,'y',17,226)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin . LexToken(ID,'y',17,226)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',17,228)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',17,228)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'y',17,231)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',17,232)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',17,232)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',17,232)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',17,232)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',17,232)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'x',17,233)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',17,234)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',17,234)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',17,234)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 87
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',17,234)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['y','+','x'] and goto state 26
   yacc.py: 506:Result : <int @ 0x2a9632a0290> (1101)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',17,234)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1101] and goto state 97
   yacc.py: 506:Result : <int @ 0x2a9632a0290> (1101)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',17,234)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',1101] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a965646040> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',17,234)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',18,238)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',18,238)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',18,238)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a965646040>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a96002db40> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos . LexToken(END,'end',18,238)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos END . LexToken(END,'end',20,244)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a96002db40>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto . LexToken(END,'end',20,244)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto empty . LexToken(END,'end',20,244)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto comandos . LexToken(END,'end',20,244)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 135
   yacc.py: 506:Result : <tuple @ 0x2a96002db40> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos . LexToken(END,'end',20,244)
   yacc.py: 473:Action : Reduce rule [desvio_ELSE -> <empty>] with [] and goto state 136
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE . LexToken(END,'end',20,244)
   yacc.py: 469:Action : Reduce rule [comando_condicional_1 -> IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE] with ['if','(',True,')','then',None,(None, None),None,'else',None,(None, None),None] and goto state 43
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9e00> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comando_condicional_1 . LexToken(END,'end',20,244)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comando_condicional_1 empty . LexToken(END,'end',20,244)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 75
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comando_condicional_1 comandos . LexToken(END,'end',20,244)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_condicional_1 comandos] with [(None, None),None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a96002db40> (((None, None), None))
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos . LexToken(END,'end',20,244)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos END . LexToken(ELSE,'else',21,249)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a96002db40>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comando_composto . LexToken(ELSE,'else',21,249)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comando_composto empty . LexToken(ELSE,'else',21,249)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comando_composto comandos . LexToken(ELSE,'else',21,249)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 127
   yacc.py: 506:Result : <tuple @ 0x2a96002db40> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos . LexToken(ELSE,'else',21,249)
   yacc.py: 473:Action : Reduce rule [desvio_IF -> <empty>] with [] and goto state 130
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF . LexToken(ELSE,'else',21,249)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE . LexToken(BEGIN,'begin',22,255)
   yacc.py: 473:Action : Reduce rule [verifica_ELSE -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE . LexToken(BEGIN,'begin',22,255)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN . LexToken(IF,'if',23,263)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin . LexToken(IF,'if',23,263)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF . LexToken(AP,'(',23,265)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP . LexToken(ID,'y',23,266)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP ID . LexToken(MAIOR,'>',23,267)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP variavel . LexToken(MAIOR,'>',23,267)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP fator . LexToken(MAIOR,'>',23,267)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP termo . LexToken(MAIOR,'>',23,267)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples . LexToken(MAIOR,'>',23,267)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples MAIOR . LexToken(NUM_INT,0,23,268)
   yacc.py: 469:Action : Reduce rule [relacao -> MAIOR] with ['>'] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a95fc15db0> ('>')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao . LexToken(NUM_INT,0,23,268)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao NUM_INT . LexToken(FP,')',23,269)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao numero . LexToken(FP,')',23,269)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao fator . LexToken(FP,')',23,269)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao termo . LexToken(FP,')',23,269)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao expressao_simples . LexToken(FP,')',23,269)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['y','>',0] and goto state 101
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao . LexToken(FP,')',23,269)
   yacc.py: 445:Action : Shift and goto state 111
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP . LexToken(THEN,'then',23,270)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN . LexToken(BEGIN,'begin',24,277)
   yacc.py: 473:Action : Reduce rule [verifica_IF -> <empty>] with [] and goto state 122
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF . LexToken(BEGIN,'begin',24,277)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN . LexToken(ID,'y',25,286)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin . LexToken(ID,'y',25,286)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',25,287)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',25,287)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'z',25,290)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',25,292)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',25,292)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',25,292)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',25,292)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',25,292)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'y',25,294)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',25,295)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',25,295)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',25,295)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 87
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',25,295)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['z','+','y'] and goto state 26
   yacc.py: 506:Result : <int @ 0x2a9632a03f0> (1151)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',25,295)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1151] and goto state 97
   yacc.py: 506:Result : <int @ 0x2a9632a03f0> (1151)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',25,295)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',1151] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a965646040> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',25,295)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',26,299)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',26,299)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',26,299)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a965646040>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9e00> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos . LexToken(END,'end',26,299)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos END . LexToken(ELSE,'else',27,305)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdc9e00>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto . LexToken(ELSE,'else',27,305)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto empty . LexToken(ELSE,'else',27,305)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto comandos . LexToken(ELSE,'else',27,305)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 127
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9e00> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos . LexToken(ELSE,'else',27,305)
   yacc.py: 473:Action : Reduce rule [desvio_IF -> <empty>] with [] and goto state 130
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF . LexToken(ELSE,'else',27,305)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE . LexToken(BEGIN,'begin',28,312)
   yacc.py: 473:Action : Reduce rule [verifica_ELSE -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE . LexToken(BEGIN,'begin',28,312)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN . LexToken(ID,'y',29,321)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin . LexToken(ID,'y',29,321)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',29,322)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',29,322)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'y',29,325)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',29,327)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',29,327)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',29,327)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',29,327)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',29,327)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'z',29,329)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',29,330)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',29,330)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',29,330)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 87
   yacc.py: 506:Result : <str @ 0x2a95fc40d70> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',29,330)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['y','+','z'] and goto state 26
   yacc.py: 506:Result : <int @ 0x2a9632a0450> (1201)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',29,330)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1201] and goto state 97
   yacc.py: 506:Result : <int @ 0x2a9632a0450> (1201)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',29,330)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',1201] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a965646040> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',29,330)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',30,334)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',30,334)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',30,334)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a965646040>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb040> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos . LexToken(END,'end',30,334)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos END . LexToken(END,'end',31,339)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb040>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto . LexToken(END,'end',31,339)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto empty . LexToken(END,'end',31,339)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto comandos . LexToken(END,'end',31,339)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 135
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb040> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos . LexToken(END,'end',31,339)
   yacc.py: 473:Action : Reduce rule [desvio_ELSE -> <empty>] with [] and goto state 136
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE . LexToken(END,'end',31,339)
   yacc.py: 469:Action : Reduce rule [comando_condicional_1 -> IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE] with ['if','(',True,')','then',None,(None, None),None,'else',None,(None, None),None] and goto state 43
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9e00> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comando_condicional_1 . LexToken(END,'end',31,339)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comando_condicional_1 empty . LexToken(END,'end',31,339)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 75
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comando_condicional_1 comandos . LexToken(END,'end',31,339)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_condicional_1 comandos] with [(None, None),None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb040> (((None, None), None))
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos . LexToken(END,'end',31,339)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos END . LexToken(END,'end',35,352)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcb040>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto . LexToken(END,'end',35,352)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto empty . LexToken(END,'end',35,352)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto comandos . LexToken(END,'end',35,352)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 135
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb040> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos . LexToken(END,'end',35,352)
   yacc.py: 473:Action : Reduce rule [desvio_ELSE -> <empty>] with [] and goto state 136
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE . LexToken(END,'end',35,352)
   yacc.py: 469:Action : Reduce rule [comando_condicional_1 -> IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE] with ['if','(',True,')','then',None,(None, None),None,'else',None,(None, None),None] and goto state 43
   yacc.py: 506:Result : <tuple @ 0x2a96002db40> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comando_condicional_1 . LexToken(END,'end',35,352)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comando_condicional_1 empty . LexToken(END,'end',35,352)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 75
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comando_condicional_1 comandos . LexToken(END,'end',35,352)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_condicional_1 comandos] with [(None, None),None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdcb040> (((None, None), None))
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',35,352)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdcb040>] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9e00> ((None, ((None, None), None)))
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',35,352)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a95fdce140>,';',<tuple @ 0x2a95fdc9e00>] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x2a95fdd9cc0> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',35,352)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a965646040>,';',<tuple @ 0x2a95fdd9cc0>] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9fc0> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',35,352)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdc9fc0>] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9e40> ((None, ({'lexema': 'y', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',35,352)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a95fdce140>,';',<tuple @ 0x2a95fdc9e40>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fddcdc0> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos . LexToken(END,'end',35,352)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos END . LexToken(PONTO_FINAL,'.',35,355)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fddcdc0>,'end'] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto . LexToken(PONTO_FINAL,'.',35,355)
   yacc.py: 445:Action : Shift and goto state 16
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 2
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL . None
   yacc.py: 473:Action : Reduce rule [fim_programa -> <empty>] with [] and goto state 38
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 430:Defaulted state 38: Reduce using 1
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa . None
   yacc.py: 469:Action : Reduce rule [programa -> PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa] with ['program','testebytecode',';',<tuple @ 0x2a96002da80>,None,'.',None] and goto state 1
   yacc.py: 506:Result : <tuple @ 0x2a96002da80> ((None, [('int', ['x', 'y', 'z'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : programa . $end
   yacc.py: 571:Done   : Returning <tuple @ 0x2a96002da80> ((None, [('int', ['x', 'y', 'z'])]))
   yacc.py: 572:PLY: PARSE DEBUG END
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PROGRAM . LexToken(ID,'while_1',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PROGRAM ID . LexToken(FIM_LINHA,';',1,15)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA . LexToken(INT,'int',2,17)
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 6
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope . LexToken(INT,'int',2,17)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope INT . LexToken(ID,'x',2,21)
   yacc.py: 469:Action : Reduce rule [tipo_simples -> INT] with ['int'] and goto state 12
   yacc.py: 506:Result : <str @ 0x2a9632ab4b0> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples . LexToken(ID,'x',2,21)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples ID . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples variavel . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples fator . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples termo . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao_simples . LexToken(SEPARADOR,',',2,22)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao . LexToken(SEPARADOR,',',2,22)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR . LexToken(ID,'y',2,24)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR ID . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR variavel . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR fator . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR termo . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao_simples . LexToken(SEPARADOR,',',2,25)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao . LexToken(SEPARADOR,',',2,25)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR . LexToken(ID,'count',2,27)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR ID . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95fca30b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR variavel . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95fca30b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR fator . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95fca30b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR termo . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95fca30b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao_simples . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['count'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95fca30b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao empty . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['count',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a965646b80> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['count']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a965646b80> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['count']] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a965646dc0> (['y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y', 'count']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a965646dc0> (['y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao mais_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y', 'count']] and goto state 23
   yacc.py: 506:Result : <list @ 0x2a965646400> (['x', 'y', 'count'])
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 430:Defaulted state 23: Reduce using 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples lista_de_parametros . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 469:Action : Reduce rule [declaracao_de_variaveis -> tipo_simples lista_de_parametros] with ['int',<list @ 0x2a965646400>] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x2a95fdd9140> (('int', ['x', 'y', 'count']))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis . LexToken(FIM_LINHA,';',2,32)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA . LexToken(BEGIN,'begin',4,35)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 11
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA empty . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> empty] with [None] and goto state 52
   yacc.py: 506:Result : <list @ 0x2a9632ab400> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis] with [<tuple @ 0x2a95fdd9140>,';',[]] and goto state 9
   yacc.py: 506:Result : <list @ 0x2a965646b80> ([('int', ['x', 'y', 'count'])])
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',4,35)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 20
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 430:Defaulted state 20: Reduce using 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis empty . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_subrotinas -> empty] with [None] and goto state 18
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 430:Defaulted state 18: Reduce using 3
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas . LexToken(BEGIN,'begin',4,35)
   yacc.py: 469:Action : Reduce rule [bloco -> new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas] with [None,<list @ 0x2a965646b80>,None] and goto state 5
   yacc.py: 506:Result : <tuple @ 0x2a96002da80> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco . LexToken(BEGIN,'begin',4,35)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN . LexToken(READ,'read',5,42)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin . LexToken(READ,'read',5,42)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ . LexToken(AP,'(',5,46)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP . LexToken(ID,'x',5,47)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP ID . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP variavel . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP fator . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP termo . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao_simples . LexToken(SEPARADOR,',',5,48)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao . LexToken(SEPARADOR,',',5,48)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR . LexToken(ID,'y',5,50)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR ID . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR variavel . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR fator . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR termo . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao_simples . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao . LexToken(FP,')',5,51)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao empty . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x2a965646dc0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y']] and goto state 53
   yacc.py: 506:Result : <list @ 0x2a965646dc0> (['y'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP expressao mais_parametros . LexToken(FP,')',5,51)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y']] and goto state 99
   yacc.py: 506:Result : <list @ 0x2a9632ab400> (['x', 'y'])
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros . LexToken(FP,')',5,51)
   yacc.py: 445:Action : Shift and goto state 109
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 430:Defaulted state 109: Reduce using 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin READ AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> READ AP lista_de_parametros FP] with ['read','(',['x', 'y'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',5,52)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(WHILE,'while',6,55)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE . LexToken(AP,'(',6,61)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP . LexToken(ID,'x',6,62)
   yacc.py: 473:Action : Reduce rule [set_expressao -> <empty>] with [] and goto state 102
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao . LexToken(ID,'x',6,62)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao ID . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao variavel . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao fator . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao termo . LexToken(MENOR,'<',6,64)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples . LexToken(MENOR,'<',6,64)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples MENOR . LexToken(ID,'y',6,66)
   yacc.py: 469:Action : Reduce rule [relacao -> MENOR] with ['<'] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a95fc15e30> ('<')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao . LexToken(ID,'y',6,66)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao ID . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao variavel . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao fator . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao termo . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 86
   yacc.py: 506:Result : <str @ 0x2a95f601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao_simples relacao expressao_simples . LexToken(FP,')',6,67)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['x','<','y'] and goto state 112
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 430:Defaulted state 112: Reduce using 36
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao . LexToken(FP,')',6,67)
   yacc.py: 473:Action : Reduce rule [verifica_WHILE -> <empty>] with [] and goto state 118
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE . LexToken(FP,')',6,67)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP . LexToken(DO,'do',6,69)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO . LexToken(BEGIN,'begin',7,73)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN . LexToken(WRITE,'write',8,81)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin . LexToken(WRITE,'write',8,81)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE . LexToken(AP,'(',8,86)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP . LexToken(ID,'x',8,87)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP ID . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP variavel . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP fator . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP termo . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao_simples . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao . LexToken(FP,')',8,88)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao empty . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao mais_parametros . LexToken(FP,')',8,88)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',None] and goto state 100
   yacc.py: 506:Result : <list @ 0x2a965665f40> (['x'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros . LexToken(FP,')',8,88)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['x'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',8,89)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(ID,'x',9,93)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',9,95)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',9,95)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'x',9,98)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',9,100)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',9,100)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(NUM_INT,1,9,102)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA NUM_INT . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA numero . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a95fdcc180> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',9,103)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(END,'end',10,106)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA empty . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a95fdcc180>,';',None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a96002d580> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',10,106)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a96002d580>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbcc0> ((None, ({'lexema': 'x', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos . LexToken(END,'end',10,106)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos END . LexToken(ID,'x',12,113)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdcbcc0>,'end'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto . LexToken(ID,'x',12,113)
   yacc.py: 473:Action : Reduce rule [desvio_WHILE -> <empty>] with [] and goto state 133
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE . LexToken(ID,'x',12,113)
   yacc.py: 469:Action : Reduce rule [comando_repetitivo_1 -> WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE] with ['while','(',None,True,None,')','do',None,None] and goto state 44
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 . LexToken(ID,'x',12,113)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 ID . LexToken(OPIGUAL_ATRIB,':=',12,115)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95f424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel . LexToken(OPIGUAL_ATRIB,':=',12,115)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB . LexToken(NUM_INT,45,12,118)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [45] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [45] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [45] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [45] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [45] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',45] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a95fdcc180> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao . LexToken(FIM_LINHA,';',12,120)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA . LexToken(ID,'count',13,123)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',13,129)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a95fdce130> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',13,129)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(NUM_INT,0,13,132)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [0] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['count',':=',0] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a95fdcbac0> ({'lexema': 'count', 'tipo': 'int', 'valo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',13,133)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA . LexToken(WHILE,'while',15,137)
   yacc.py: 445:Action : Shift and goto state 50
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE . LexToken(AP,'(',15,142)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP . LexToken(ID,'count',15,143)
   yacc.py: 473:Action : Reduce rule [set_expressao -> <empty>] with [] and goto state 102
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao . LexToken(ID,'count',15,143)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao ID . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a96566a5b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao variavel . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a96566a5b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao fator . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a96566a5b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao termo . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a96566a5b0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples . LexToken(MENOR_IGUAL,'<=',15,149)
   yacc.py: 445:Action : Shift and goto state 63
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples MENOR_IGUAL . LexToken(NUM_INT,45,15,152)
   yacc.py: 469:Action : Reduce rule [relacao -> MENOR_IGUAL] with ['<='] and goto state 56
   yacc.py: 506:Result : <str @ 0x2a95fdce130> ('<=')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao . LexToken(NUM_INT,45,15,152)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao NUM_INT . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [45] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao numero . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [45] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao fator . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [45] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao termo . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [45] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c11c90> (45)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao_simples relacao expressao_simples . LexToken(FP,')',15,154)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['count','<=',45] and goto state 112
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 430:Defaulted state 112: Reduce using 36
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao . LexToken(FP,')',15,154)
   yacc.py: 473:Action : Reduce rule [verifica_WHILE -> <empty>] with [] and goto state 118
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE . LexToken(FP,')',15,154)
   yacc.py: 445:Action : Shift and goto state 123
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP . LexToken(DO,'do',15,156)
   yacc.py: 445:Action : Shift and goto state 128
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO . LexToken(BEGIN,'begin',16,161)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN . LexToken(WRITE,'write',17,169)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin . LexToken(WRITE,'write',17,169)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE . LexToken(AP,'(',17,174)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP . LexToken(ID,'count',17,175)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP ID . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a96566a370> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP variavel . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a96566a370> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP fator . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a96566a370> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP termo . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a96566a370> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao_simples . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['count'] and goto state 24
   yacc.py: 506:Result : <str @ 0x2a96566a370> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao . LexToken(FP,')',17,180)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao empty . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP expressao mais_parametros . LexToken(FP,')',17,180)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['count',None] and goto state 100
   yacc.py: 506:Result : <list @ 0x2a965665f40> (['count'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros . LexToken(FP,')',17,180)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['count'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento . LexToken(FIM_LINHA,';',17,181)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA . LexToken(ID,'count',18,185)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',18,191)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 46
   yacc.py: 506:Result : <str @ 0x2a96566abf0> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',18,191)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'count',18,194)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['count'] and goto state 30
   yacc.py: 506:Result : <str @ 0x2a96566a570> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['count'] and goto state 28
   yacc.py: 506:Result : <str @ 0x2a96566a570> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['count'] and goto state 27
   yacc.py: 506:Result : <str @ 0x2a96566a570> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',18,200)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['count'] and goto state 26
   yacc.py: 506:Result : <str @ 0x2a96566a570> ('count')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',18,200)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(NUM_INT,1,18,202)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA NUM_INT . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA numero . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['count','+',1] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [1] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['count',':=',1] and goto state 40
   yacc.py: 506:Result : <dict @ 0x2a95fdcbac0> ({'lexema': 'count', 'tipo': 'int', 'valo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',18,203)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(END,'end',19,206)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA empty . LexToken(END,'end',19,206)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',19,206)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a95fdcbac0>,';',None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbcc0> (({'lexema': 'count', 'tipo': 'int', 'val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',19,206)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdcbcc0>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a96002d580> ((None, ({'lexema': 'count', 'tipo': 'int ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos . LexToken(END,'end',19,206)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO BEGIN new_begin comandos END . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a96002d580>,'end'] and goto state 131
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto . LexToken(END,'end',20,210)
   yacc.py: 473:Action : Reduce rule [desvio_WHILE -> <empty>] with [] and goto state 133
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comando_repetitivo_1 -> WHILE AP set_expressao expressao verifica_WHILE FP DO comando_composto desvio_WHILE] with ['while','(',None,True,None,')','do',None,None] and goto state 44
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 . LexToken(END,'end',20,210)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 empty . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 76
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comando_repetitivo_1 comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_repetitivo_1 comandos] with [None,None] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x2a96002d580> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a95fdcbac0>,';',(None, None)] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x2a95fdcbcc0> (({'lexema': 'count', 'tipo': 'int', 'val ...)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 atribuicao FIM_LINHA comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x2a95fdcc180>,';',<tuple @ 0x2a95fdcbcc0>] and goto state 76
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9dc0> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comando_repetitivo_1 comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_repetitivo_1 comandos] with [None,<tuple @ 0x2a95fdc9dc0>] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9f80> ((None, ({'lexema': 'x', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',20,210)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x2a95fdc9f80>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x2a95fdc9f40> ((None, (None, ({'lexema': 'x', 'tipo': ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos . LexToken(END,'end',20,210)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos END . LexToken(PONTO_FINAL,'.',20,213)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x2a95fdc9f40>,'end'] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto . LexToken(PONTO_FINAL,'.',20,213)
   yacc.py: 445:Action : Shift and goto state 16
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 2
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL . None
   yacc.py: 473:Action : Reduce rule [fim_programa -> <empty>] with [] and goto state 38
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 430:Defaulted state 38: Reduce using 1
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa . None
   yacc.py: 469:Action : Reduce rule [programa -> PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa] with ['program','while_1',';',<tuple @ 0x2a96002da80>,None,'.',None] and goto state 1
   yacc.py: 506:Result : <tuple @ 0x2a96002da80> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : programa . $end
   yacc.py: 571:Done   : Returning <tuple @ 0x2a96002da80> ((None, [('int', ['x', 'y', 'count'])]))
   yacc.py: 572:PLY: PARSE DEBUG END
