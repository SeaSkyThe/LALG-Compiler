   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'program',1,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PROGRAM . LexToken(ID,'testebytecode',1,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PROGRAM ID . LexToken(FIM_LINHA,';',1,21)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA . LexToken(INT,'int',2,23)
   yacc.py: 473:Action : Reduce rule [new_scope -> <empty>] with [] and goto state 6
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope . LexToken(INT,'int',2,23)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope INT . LexToken(ID,'x',2,27)
   yacc.py: 469:Action : Reduce rule [tipo_simples -> INT] with ['int'] and goto state 12
   yacc.py: 506:Result : <str @ 0x1ba294dccf0> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples . LexToken(ID,'x',2,27)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples ID . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples variavel . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples fator . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples termo . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao_simples . LexToken(SEPARADOR,',',2,28)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao . LexToken(SEPARADOR,',',2,28)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR . LexToken(ID,'y',2,30)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR ID . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR variavel . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR fator . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR termo . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao_simples . LexToken(SEPARADOR,',',2,31)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao . LexToken(SEPARADOR,',',2,31)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR . LexToken(ID,'z',2,33)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR ID . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR variavel . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR fator . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR termo . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao_simples . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['z'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao empty . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['z',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x1ba26d717c0> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x1ba26d717c0> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR expressao mais_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['z']] and goto state 85
   yacc.py: 506:Result : <list @ 0x1ba26d71c80> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao SEPARADOR lista_de_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y', 'z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x1ba26d71c80> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples expressao mais_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y', 'z']] and goto state 23
   yacc.py: 506:Result : <list @ 0x1ba26c69780> (['x', 'y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 430:Defaulted state 23: Reduce using 6
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope tipo_simples lista_de_parametros . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 469:Action : Reduce rule [declaracao_de_variaveis -> tipo_simples lista_de_parametros] with ['int',['x', 'y', 'z']] and goto state 10
   yacc.py: 506:Result : <tuple @ 0x1ba294c4b40> (('int', ['x', 'y', 'z']))
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis . LexToken(FIM_LINHA,';',2,34)
   yacc.py: 445:Action : Shift and goto state 22
   yacc.py: 410:
   yacc.py: 411:State  : 22
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA . LexToken(BEGIN,'begin',3,36)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 11
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA empty . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> empty] with [None] and goto state 52
   yacc.py: 506:Result : <list @ 0x1ba294c6f80> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 52
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_variaveis -> declaracao_de_variaveis FIM_LINHA parte_declaracao_de_variaveis] with [<tuple @ 0x1ba294c4b40>,';',[]] and goto state 9
   yacc.py: 506:Result : <list @ 0x1ba26d717c0> ([('int', ['x', 'y', 'z'])])
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis . LexToken(BEGIN,'begin',3,36)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 20
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 430:Defaulted state 20: Reduce using 11
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis empty . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [parte_declaracao_de_subrotinas -> empty] with [None] and goto state 18
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 430:Defaulted state 18: Reduce using 3
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas . LexToken(BEGIN,'begin',3,36)
   yacc.py: 469:Action : Reduce rule [bloco -> new_scope parte_declaracao_de_variaveis parte_declaracao_de_subrotinas] with [None,<list @ 0x1ba26d717c0>,None] and goto state 5
   yacc.py: 506:Result : <tuple @ 0x1ba294c4e80> ((None, [('int', ['x', 'y', 'z'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco . LexToken(BEGIN,'begin',3,36)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN . LexToken(ID,'x',4,43)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin . LexToken(ID,'x',4,43)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',4,45)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',4,45)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(NUM_INT,0,4,48)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB NUM_INT . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB numero . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [0] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',0] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1ba2a2a5380> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',4,49)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA . LexToken(READ,'read',5,53)
   yacc.py: 445:Action : Shift and goto state 47
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ . LexToken(AP,'(',5,57)
   yacc.py: 445:Action : Shift and goto state 79
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP . LexToken(ID,'y',5,58)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP ID . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP variavel . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP fator . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP termo . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao_simples . LexToken(SEPARADOR,',',5,59)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao . LexToken(SEPARADOR,',',5,59)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR . LexToken(ID,'z',5,61)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR ID . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR variavel . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR fator . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR termo . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao_simples . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['z'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao . LexToken(FP,')',5,62)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao empty . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['z',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x1ba294c6f80> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x1ba294c6f80> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP expressao mais_parametros . LexToken(FP,')',5,62)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['z']] and goto state 99
   yacc.py: 506:Result : <list @ 0x1ba26d71c80> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP lista_de_parametros . LexToken(FP,')',5,62)
   yacc.py: 445:Action : Shift and goto state 109
   yacc.py: 410:
   yacc.py: 411:State  : 109
   yacc.py: 430:Defaulted state 109: Reduce using 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA READ AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> READ AP lista_de_parametros FP] with ['read','(',['y', 'z'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento . LexToken(FIM_LINHA,';',5,63)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA . LexToken(ID,'x',6,66)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA ID . LexToken(OPIGUAL_ATRIB,':=',6,68)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel . LexToken(OPIGUAL_ATRIB,':=',6,68)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB . LexToken(ID,'x',6,71)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',6,72)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',6,72)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',6,72)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',6,72)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',6,72)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'z',6,73)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(OPMUL,'*',6,74)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(OPMUL,'*',6,74)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(OPMUL,'*',6,74)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 87
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(OPMUL,'*',6,74)
   yacc.py: 445:Action : Shift and goto state 65
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL . LexToken(AP,'(',6,75)
   yacc.py: 445:Action : Shift and goto state 33
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP . LexToken(NUM_INT,10,6,76)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP NUM_INT . LexToken(DIV,'div',6,79)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [10] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP numero . LexToken(DIV,'div',6,79)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [10] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP fator . LexToken(DIV,'div',6,79)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [10] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo . LexToken(DIV,'div',6,79)
   yacc.py: 445:Action : Shift and goto state 67
   yacc.py: 410:
   yacc.py: 411:State  : 67
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV . LexToken(ID,'y',6,83)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV ID . LexToken(OPSOMA,'+',6,85)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV variavel . LexToken(OPSOMA,'+',6,85)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 92
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo DIV fator . LexToken(OPSOMA,'+',6,85)
   yacc.py: 469:Action : Reduce rule [termo -> termo DIV fator] with [10,'div','y'] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP termo . LexToken(OPSOMA,'+',6,85)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [10] and goto state 69
   yacc.py: 506:Result : <int @ 0x7ffd14c11830> (10)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples . LexToken(OPSOMA,'+',6,85)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA . LexToken(NUM_INT,1,6,87)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA NUM_INT . LexToken(FP,')',6,88)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [1] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA numero . LexToken(FP,')',6,88)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [1] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA fator . LexToken(FP,')',6,88)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [1] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd14c11710> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples OPSOMA termo . LexToken(FP,')',6,88)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with [10,'+',1] and goto state 69
   yacc.py: 506:Result : <int @ 0x7ffd14c11850> (11)
   yacc.py: 410:
   yacc.py: 411:State  : 69
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples . LexToken(FP,')',6,88)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL AP expressao_simples FP . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 469:Action : Reduce rule [fator -> AP expressao_simples FP] with ['(',11,')'] and goto state 90
   yacc.py: 506:Result : <int @ 0x7ffd14c11850> (11)
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo OPMUL fator . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 469:Action : Reduce rule [termo -> termo OPMUL fator] with ['z','*',11] and goto state 87
   yacc.py: 506:Result : <int @ 0x7ffd14c11850> (11)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+',11] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11850> (11)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [11] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11850> (11)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['x',':=',11] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1ba2a2a5380> ({'lexema': 'x', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao . LexToken(FIM_LINHA,';',6,89)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA . LexToken(WRITE,'write',7,120)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE . LexToken(AP,'(',7,125)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP . LexToken(ID,'x',7,126)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP ID . LexToken(SEPARADOR,',',7,127)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP variavel . LexToken(SEPARADOR,',',7,127)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP fator . LexToken(SEPARADOR,',',7,127)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP termo . LexToken(SEPARADOR,',',7,127)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao_simples . LexToken(SEPARADOR,',',7,127)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['x'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao . LexToken(SEPARADOR,',',7,127)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR . LexToken(ID,'y',7,129)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR ID . LexToken(SEPARADOR,',',7,130)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR variavel . LexToken(SEPARADOR,',',7,130)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR fator . LexToken(SEPARADOR,',',7,130)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR termo . LexToken(SEPARADOR,',',7,130)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao_simples . LexToken(SEPARADOR,',',7,130)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['y'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao . LexToken(SEPARADOR,',',7,130)
   yacc.py: 445:Action : Shift and goto state 54
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR . LexToken(ID,'z',7,132)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR ID . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR variavel . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR fator . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR termo . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao_simples . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with ['z'] and goto state 24
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao . LexToken(FP,')',7,133)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 55
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao empty . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['z',None] and goto state 85
   yacc.py: 506:Result : <list @ 0x1ba26d71c80> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao SEPARADOR lista_de_parametros . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x1ba26d71c80> (['z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR expressao mais_parametros . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['y',['z']] and goto state 85
   yacc.py: 506:Result : <list @ 0x1ba26d703c0> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao SEPARADOR lista_de_parametros . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [mais_parametros -> SEPARADOR lista_de_parametros] with [',',['y', 'z']] and goto state 53
   yacc.py: 506:Result : <list @ 0x1ba26d703c0> (['y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP expressao mais_parametros . LexToken(FP,')',7,133)
   yacc.py: 469:Action : Reduce rule [lista_de_parametros -> expressao mais_parametros] with ['x',['y', 'z']] and goto state 100
   yacc.py: 506:Result : <list @ 0x1ba294c6f80> (['x', 'y', 'z'])
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP lista_de_parametros . LexToken(FP,')',7,133)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 430:Defaulted state 110: Reduce using 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA WRITE AP lista_de_parametros FP . None
   yacc.py: 469:Action : Reduce rule [chamada_de_procedimento -> WRITE AP lista_de_parametros FP] with ['write','(',['x', 'y', 'z'],')'] and goto state 41
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 41
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento . LexToken(FIM_LINHA,';',7,134)
   yacc.py: 445:Action : Shift and goto state 73
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA . LexToken(IF,'if',8,137)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF . LexToken(AP,'(',8,139)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP . LexToken(ID,'x',8,140)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP ID . LexToken(MAIOR,'>',8,142)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP variavel . LexToken(MAIOR,'>',8,142)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP fator . LexToken(MAIOR,'>',8,142)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP termo . LexToken(MAIOR,'>',8,142)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples . LexToken(MAIOR,'>',8,142)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples MAIOR . LexToken(NUM_INT,0,8,144)
   yacc.py: 469:Action : Reduce rule [relacao -> MAIOR] with ['>'] and goto state 56
   yacc.py: 506:Result : <str @ 0x1ba269d71f0> ('>')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao . LexToken(NUM_INT,0,8,144)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao NUM_INT . LexToken(FP,')',8,145)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao numero . LexToken(FP,')',8,145)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao fator . LexToken(FP,')',8,145)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao termo . LexToken(FP,')',8,145)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao_simples relacao expressao_simples . LexToken(FP,')',8,145)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['x','>',0] and goto state 101
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao . LexToken(FP,')',8,145)
   yacc.py: 445:Action : Shift and goto state 111
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP . LexToken(THEN,'then',8,147)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN . LexToken(BEGIN,'begin',9,153)
   yacc.py: 473:Action : Reduce rule [verifica_IF -> <empty>] with [] and goto state 122
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF . LexToken(BEGIN,'begin',9,153)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN . LexToken(IF,'if',10,161)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin . LexToken(IF,'if',10,161)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF . LexToken(AP,'(',10,163)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP . LexToken(ID,'y',10,164)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP ID . LexToken(MAIOR,'>',10,165)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP variavel . LexToken(MAIOR,'>',10,165)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP fator . LexToken(MAIOR,'>',10,165)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP termo . LexToken(MAIOR,'>',10,165)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples . LexToken(MAIOR,'>',10,165)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples MAIOR . LexToken(NUM_INT,0,10,166)
   yacc.py: 469:Action : Reduce rule [relacao -> MAIOR] with ['>'] and goto state 56
   yacc.py: 506:Result : <str @ 0x1ba269d71f0> ('>')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao . LexToken(NUM_INT,0,10,166)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao NUM_INT . LexToken(FP,')',10,167)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao numero . LexToken(FP,')',10,167)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao fator . LexToken(FP,')',10,167)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao termo . LexToken(FP,')',10,167)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao_simples relacao expressao_simples . LexToken(FP,')',10,167)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['y','>',0] and goto state 101
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao . LexToken(FP,')',10,167)
   yacc.py: 445:Action : Shift and goto state 111
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP . LexToken(THEN,'then',10,168)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN . LexToken(BEGIN,'begin',11,175)
   yacc.py: 473:Action : Reduce rule [verifica_IF -> <empty>] with [] and goto state 122
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF . LexToken(BEGIN,'begin',11,175)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN . LexToken(ID,'y',12,184)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin . LexToken(ID,'y',12,184)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',12,186)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',12,186)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'x',12,189)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',12,190)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',12,190)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',12,190)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',12,190)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['x'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',12,190)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'y',12,191)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 87
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['x','+','y'] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11870> (12)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [12] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11870> (12)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',12] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1ba2a2a53c0> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',12,192)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',13,196)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',13,196)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',13,196)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1ba2a2a53c0>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1ba294c60c0> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos . LexToken(END,'end',13,196)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos END . LexToken(ELSE,'else',14,202)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1ba294c60c0>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto . LexToken(ELSE,'else',14,202)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto empty . LexToken(ELSE,'else',14,202)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto comandos . LexToken(ELSE,'else',14,202)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 127
   yacc.py: 506:Result : <tuple @ 0x1ba294c60c0> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos . LexToken(ELSE,'else',14,202)
   yacc.py: 473:Action : Reduce rule [desvio_IF -> <empty>] with [] and goto state 130
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF . LexToken(ELSE,'else',14,202)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE . LexToken(BEGIN,'begin',15,209)
   yacc.py: 473:Action : Reduce rule [verifica_ELSE -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE . LexToken(BEGIN,'begin',15,209)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN . LexToken(ID,'y',16,218)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin . LexToken(ID,'y',16,218)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',16,220)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',16,220)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'y',16,223)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',16,224)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',16,224)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',16,224)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',16,224)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',16,224)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'x',16,225)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['x'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['x'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['x'] and goto state 87
   yacc.py: 506:Result : <str @ 0x1ba26424530> ('x')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['y','+','x'] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c119d0> (23)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [23] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c119d0> (23)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',23] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1ba2a2a53c0> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',16,226)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',17,230)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',17,230)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',17,230)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1ba2a2a53c0>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1ba294c4a80> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos . LexToken(END,'end',17,230)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos END . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1ba294c4a80>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto . LexToken(END,'end',19,236)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto empty . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto comandos . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 135
   yacc.py: 506:Result : <tuple @ 0x1ba294c4a80> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos . LexToken(END,'end',19,236)
   yacc.py: 473:Action : Reduce rule [desvio_ELSE -> <empty>] with [] and goto state 136
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comando_condicional_1 -> IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE] with ['if','(',True,')','then',None,(None, None),None,'else',None,(None, None),None] and goto state 43
   yacc.py: 506:Result : <tuple @ 0x1ba294c60c0> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comando_condicional_1 . LexToken(END,'end',19,236)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comando_condicional_1 empty . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 75
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comando_condicional_1 comandos . LexToken(END,'end',19,236)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_condicional_1 comandos] with [(None, None),None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1ba294c4a80> (((None, None), None))
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos . LexToken(END,'end',19,236)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos END . LexToken(ELSE,'else',20,241)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1ba294c4a80>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comando_composto . LexToken(ELSE,'else',20,241)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comando_composto empty . LexToken(ELSE,'else',20,241)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comando_composto comandos . LexToken(ELSE,'else',20,241)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 127
   yacc.py: 506:Result : <tuple @ 0x1ba294c4a80> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos . LexToken(ELSE,'else',20,241)
   yacc.py: 473:Action : Reduce rule [desvio_IF -> <empty>] with [] and goto state 130
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF . LexToken(ELSE,'else',20,241)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE . LexToken(BEGIN,'begin',21,247)
   yacc.py: 473:Action : Reduce rule [verifica_ELSE -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE . LexToken(BEGIN,'begin',21,247)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN . LexToken(IF,'if',22,255)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin . LexToken(IF,'if',22,255)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF . LexToken(AP,'(',22,257)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP . LexToken(ID,'y',22,258)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP ID . LexToken(MAIOR,'>',22,259)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP variavel . LexToken(MAIOR,'>',22,259)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP fator . LexToken(MAIOR,'>',22,259)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP termo . LexToken(MAIOR,'>',22,259)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples . LexToken(MAIOR,'>',22,259)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples MAIOR . LexToken(NUM_INT,0,22,260)
   yacc.py: 469:Action : Reduce rule [relacao -> MAIOR] with ['>'] and goto state 56
   yacc.py: 506:Result : <str @ 0x1ba269d71f0> ('>')
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao . LexToken(NUM_INT,0,22,260)
   yacc.py: 445:Action : Shift and goto state 35
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao NUM_INT . LexToken(FP,')',22,261)
   yacc.py: 469:Action : Reduce rule [numero -> NUM_INT] with [0] and goto state 29
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao numero . LexToken(FP,')',22,261)
   yacc.py: 469:Action : Reduce rule [fator -> numero] with [0] and goto state 28
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao fator . LexToken(FP,')',22,261)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with [0] and goto state 27
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao termo . LexToken(FP,')',22,261)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with [0] and goto state 86
   yacc.py: 506:Result : <int @ 0x7ffd14c116f0> (0)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao_simples relacao expressao_simples . LexToken(FP,')',22,261)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples relacao expressao_simples] with ['y','>',0] and goto state 101
   yacc.py: 506:Result : <bool @ 0x7ffd14bcd750> (True)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao . LexToken(FP,')',22,261)
   yacc.py: 445:Action : Shift and goto state 111
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP . LexToken(THEN,'then',22,262)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN . LexToken(BEGIN,'begin',23,269)
   yacc.py: 473:Action : Reduce rule [verifica_IF -> <empty>] with [] and goto state 122
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF . LexToken(BEGIN,'begin',23,269)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN . LexToken(ID,'y',24,278)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin . LexToken(ID,'y',24,278)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',24,279)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',24,279)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'z',24,282)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',24,284)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',24,284)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',24,284)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',24,284)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['z'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',24,284)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'y',24,286)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 87
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['z','+','y'] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c119f0> (24)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [24] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c119f0> (24)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',24] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1ba2a2a53c0> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',24,287)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',25,291)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',25,291)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',25,291)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1ba2a2a53c0>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1ba294c60c0> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos . LexToken(END,'end',25,291)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF BEGIN new_begin comandos END . LexToken(ELSE,'else',26,297)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1ba294c60c0>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto . LexToken(ELSE,'else',26,297)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto empty . LexToken(ELSE,'else',26,297)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comando_composto comandos . LexToken(ELSE,'else',26,297)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 127
   yacc.py: 506:Result : <tuple @ 0x1ba294c60c0> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos . LexToken(ELSE,'else',26,297)
   yacc.py: 473:Action : Reduce rule [desvio_IF -> <empty>] with [] and goto state 130
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF . LexToken(ELSE,'else',26,297)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE . LexToken(BEGIN,'begin',27,304)
   yacc.py: 473:Action : Reduce rule [verifica_ELSE -> <empty>] with [] and goto state 134
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE . LexToken(BEGIN,'begin',27,304)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN . LexToken(ID,'y',28,313)
   yacc.py: 473:Action : Reduce rule [new_begin -> <empty>] with [] and goto state 17
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin . LexToken(ID,'y',28,313)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin ID . LexToken(OPIGUAL_ATRIB,':=',28,314)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 46
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel . LexToken(OPIGUAL_ATRIB,':=',28,314)
   yacc.py: 445:Action : Shift and goto state 77
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB . LexToken(ID,'y',28,317)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB ID . LexToken(OPSOMA,'+',28,319)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['y'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB variavel . LexToken(OPSOMA,'+',28,319)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['y'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB fator . LexToken(OPSOMA,'+',28,319)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['y'] and goto state 27
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB termo . LexToken(OPSOMA,'+',28,319)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> termo] with ['y'] and goto state 26
   yacc.py: 506:Result : <str @ 0x1ba26601c70> ('y')
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(OPSOMA,'+',28,319)
   yacc.py: 445:Action : Shift and goto state 57
   yacc.py: 410:
   yacc.py: 411:State  : 57
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA . LexToken(ID,'z',28,321)
   yacc.py: 445:Action : Shift and goto state 37
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA ID . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [variavel -> ID] with ['z'] and goto state 30
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA variavel . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [fator -> variavel] with ['z'] and goto state 28
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA fator . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [termo -> fator] with ['z'] and goto state 87
   yacc.py: 506:Result : <str @ 0x1ba26c051b0> ('z')
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples OPSOMA termo . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [expressao_simples -> expressao_simples OPSOMA termo] with ['y','+','z'] and goto state 26
   yacc.py: 506:Result : <int @ 0x7ffd14c11a10> (25)
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao_simples . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [expressao -> expressao_simples] with [25] and goto state 97
   yacc.py: 506:Result : <int @ 0x7ffd14c11a10> (25)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 27
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin variavel OPIGUAL_ATRIB expressao . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 469:Action : Reduce rule [atribuicao -> variavel OPIGUAL_ATRIB expressao] with ['y',':=',25] and goto state 40
   yacc.py: 506:Result : <dict @ 0x1ba2a2a53c0> ({'lexema': 'y', 'tipo': 'int', 'valor':  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao . LexToken(FIM_LINHA,';',28,322)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA . LexToken(END,'end',29,326)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA empty . LexToken(END,'end',29,326)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',29,326)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1ba2a2a53c0>,';',None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1ba294c4b00> (({'lexema': 'y', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos . LexToken(END,'end',29,326)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos END . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1ba294c4b00>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto . LexToken(END,'end',30,331)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto empty . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto comandos . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 135
   yacc.py: 506:Result : <tuple @ 0x1ba294c4b00> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos . LexToken(END,'end',30,331)
   yacc.py: 473:Action : Reduce rule [desvio_ELSE -> <empty>] with [] and goto state 136
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comando_condicional_1 -> IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE] with ['if','(',True,')','then',None,(None, None),None,'else',None,(None, None),None] and goto state 43
   yacc.py: 506:Result : <tuple @ 0x1ba294c60c0> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comando_condicional_1 . LexToken(END,'end',30,331)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comando_condicional_1 empty . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 75
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comando_condicional_1 comandos . LexToken(END,'end',30,331)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_condicional_1 comandos] with [(None, None),None] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1ba294c4b00> (((None, None), None))
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos . LexToken(END,'end',30,331)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE BEGIN new_begin comandos END . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1ba294c4b00>,'end'] and goto state 42
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto . LexToken(END,'end',34,344)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto empty . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 74
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comando_composto comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_composto comandos] with [None,None] and goto state 135
   yacc.py: 506:Result : <tuple @ 0x1ba294c4b00> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos . LexToken(END,'end',34,344)
   yacc.py: 473:Action : Reduce rule [desvio_ELSE -> <empty>] with [] and goto state 136
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comando_condicional_1 -> IF AP expressao FP THEN verifica_IF comandos desvio_IF ELSE verifica_ELSE comandos desvio_ELSE] with ['if','(',True,')','then',None,(None, None),None,'else',None,(None, None),None] and goto state 43
   yacc.py: 506:Result : <tuple @ 0x1ba294c4a80> ((None, None))
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comando_condicional_1 . LexToken(END,'end',34,344)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comando_condicional_1 empty . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> empty] with [None] and goto state 75
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comando_condicional_1 comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> comando_condicional_1 comandos] with [(None, None),None] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x1ba294c4b00> (((None, None), None))
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x1ba294c4b00>] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x1ba294c60c0> ((None, ((None, None), None)))
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA atribuicao FIM_LINHA comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1ba2a2a5380>,';',<tuple @ 0x1ba294c60c0>] and goto state 96
   yacc.py: 506:Result : <tuple @ 0x1ba294c4c80> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA chamada_de_procedimento FIM_LINHA comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> chamada_de_procedimento FIM_LINHA comandos] with [None,';',<tuple @ 0x1ba294c4c80>] and goto state 95
   yacc.py: 506:Result : <tuple @ 0x1ba294c4d00> ((None, ({'lexema': 'x', 'tipo': 'int', ' ...)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin atribuicao FIM_LINHA comandos . LexToken(END,'end',34,344)
   yacc.py: 469:Action : Reduce rule [comandos -> atribuicao FIM_LINHA comandos] with [<dict @ 0x1ba2a2a5380>,';',<tuple @ 0x1ba294c4d00>] and goto state 39
   yacc.py: 506:Result : <tuple @ 0x1ba294c4e00> (({'lexema': 'x', 'tipo': 'int', 'valor': ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos . LexToken(END,'end',34,344)
   yacc.py: 445:Action : Shift and goto state 71
   yacc.py: 410:
   yacc.py: 411:State  : 71
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco BEGIN new_begin comandos END . LexToken(PONTO_FINAL,'.',34,347)
   yacc.py: 469:Action : Reduce rule [comando_composto -> BEGIN new_begin comandos END] with ['begin',None,<tuple @ 0x1ba294c4e00>,'end'] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto . LexToken(PONTO_FINAL,'.',34,347)
   yacc.py: 445:Action : Shift and goto state 16
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 2
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL . None
   yacc.py: 473:Action : Reduce rule [fim_programa -> <empty>] with [] and goto state 38
   yacc.py: 548:Result : <NoneType @ 0x7ffd14bd9880> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 430:Defaulted state 38: Reduce using 1
   yacc.py: 434:Stack  : PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa . None
   yacc.py: 469:Action : Reduce rule [programa -> PROGRAM ID FIM_LINHA bloco comando_composto PONTO_FINAL fim_programa] with ['program','testebytecode',';',<tuple @ 0x1ba294c4e80>,None,'.',None] and goto state 1
   yacc.py: 506:Result : <tuple @ 0x1ba294c4e80> ((None, [('int', ['x', 'y', 'z'])]))
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : programa . $end
   yacc.py: 571:Done   : Returning <tuple @ 0x1ba294c4e80> ((None, [('int', ['x', 'y', 'z'])]))
   yacc.py: 572:PLY: PARSE DEBUG END
